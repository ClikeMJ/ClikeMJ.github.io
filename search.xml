<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaSE · 重点类和对象思想②</title>
      <link href="/2022/04/02/Java/JavaSE/JavaSE%20%C2%B7%20%E9%87%8D%E7%82%B9%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E2%91%A1/"/>
      <url>/2022/04/02/Java/JavaSE/JavaSE%20%C2%B7%20%E9%87%8D%E7%82%B9%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E2%91%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="12-面向对象基础"><a href="#12-面向对象基础" class="headerlink" title="12 面向对象基础"></a>12 面向对象基础</h1><h2 id="12-1-类和对象"><a href="#12-1-类和对象" class="headerlink" title="12.1 类和对象"></a>12.1 类和对象</h2><ol><li><p>什么是对象：万物皆对象，客观存在的事物皆为对象</p></li><li><p>什么是面向对象：面向具体的数据信息</p></li><li><p>什么是对象的属性： 对象具有的各种特征，每个对象的每个属性都拥有特定的值</p></li><li><p>什么是对象的行为： 对象能够执行的操作</p></li><li><p>什么是类：类是对现实生活中一类具有共同属性和行为的事物的抽象，确定对象将会拥有的属性和行为</p><ul><li>类是JAVA程序的基本组成单位</li><li>类的特点：<br>  （1）类是对象的数据类型<br>  （2）类是具有相同属性和行为的一组对象的集合</li></ul></li><li><p>类和对象的关系：类是对象的抽象，对象是类的实体</p><ul><li>类：类是对现实生活中一类具有共同属性和行为的事物的抽象</li><li>对象：是能够看得到摸的着的真实存在的实体</li></ul></li><li><p>类的组成：属性和行为</p><ul><li>属性：在类中通过成员变量来体现（类中方法外的变量）</li><li>行为：在类中通过成员方法来体现（和前面的方法相比去掉static关键字即可）</li></ul></li><li><p>类的定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> calss 类名&#123;</span><br><span class="line"><span class="comment">// 成员变量</span></span><br><span class="line">变量<span class="number">1</span>的数据类型 变量<span class="number">1</span>;</span><br><span class="line">变量<span class="number">2</span>的数据类型 变量<span class="number">2</span>;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//成员方法</span></span><br><span class="line">方法<span class="number">1</span>;</span><br><span class="line">方法<span class="number">2</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>对象的使用：</p><ol><li><p>创建对象：类名 对象名 &#x3D; new 类名();</p></li><li><p>使用对象：</p><p>（1）使用成员变量：对象名.变量名；</p><p>（2）使用成员方法：对象名.方法名()</p></li></ol></li></ol><ul><li><p>案例：学生</p><p>要求：定义一个学生类，然后定义一个学生测试类,在学生测试类中通过对象完成成员变量和成员方法的使用</p><ol><li>定义一个学生类</li><li>定义学生测试类</li><li>在学生测试类中通过对象完成成员变量和成员方法的使用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> com.itheima_02;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">学生类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;  </span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    String name;  </span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123; </span><br><span class="line">        System.out.println(<span class="string">&quot;我是学生,我爱学习!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doHomeWork</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;写作业,明天要交。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> com.itheima_02;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">学生测试类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();  </span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用对象</span></span><br><span class="line">        System.out.println(s.name+<span class="string">&quot;,&quot;</span>+s.age);</span><br><span class="line">        <span class="comment">//结果为：null 0；因为目前在堆内存，有默认值，String默认值为null，int默认值为0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量</span></span><br><span class="line">        s.name = <span class="string">&quot;林青霞&quot;</span>;   </span><br><span class="line">        s.age = <span class="number">22</span>;</span><br><span class="line">        </span><br><span class="line">        System.out.println(s.name+<span class="string">&quot;,&quot;</span>+s.age); </span><br><span class="line">        </span><br><span class="line">        <span class="comment">//使用成员方法</span></span><br><span class="line">        s.study();   </span><br><span class="line">        s.doHomeWork();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="12-2-对象内存图"><a href="#12-2-对象内存图" class="headerlink" title="12.2 对象内存图"></a>12.2 对象内存图</h2><ul><li>Java：栈内存和堆内存</li></ul><blockquote><p>CHART： 对象内存图（单个对象）</p></blockquote><blockquote><p>CHART： 对象内存图（多个对象）</p></blockquote><blockquote><p>CHART： 对象内存图（多个对象指向相同）</p></blockquote><h2 id="12-3-成员变量和局部变量"><a href="#12-3-成员变量和局部变量" class="headerlink" title="12.3 成员变量和局部变量"></a>12.3 成员变量和局部变量</h2><ol><li><p>成员变量：类中方法外的变量</p></li><li><p>局部变量：类中方法中的变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line">String name;<span class="comment">// 成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">// 局部变量</span></span><br><span class="line">System.out.println(<span class="string">&#x27;Good good study!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> age;<span class="comment">// 成员变量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>成员变量和局部变量的区别：</p><table><thead><tr><th>区别</th><th>成员变量</th><th>局部变量</th></tr></thead><tbody><tr><td>类中位置不同</td><td>类中方法外</td><td>类中方法内</td></tr><tr><td>内存位置不同</td><td>堆内存</td><td>栈内存</td></tr><tr><td>生命周期不同</td><td>随着对象的存在或消失</td><td>随着方法调用存在或消失</td></tr><tr><td>初始值不同</td><td>有默认的初值</td><td>无默认值，必须先定义在赋值才能使用</td></tr></tbody></table></li></ol><h2 id="12-4-封装"><a href="#12-4-封装" class="headerlink" title="12.4 封装"></a>12.4 封装</h2><ol><li><p>private关键字</p><ul><li>是一个权限修饰符</li><li>可以修饰成员变量</li><li>作用是保护成员不被别的类使用，被private修饰的成员仅在本类中才能访问</li></ul><p>针对private修饰的成员变量，如果需要被其他类使用，应提供相应的操作</p><ul><li>提供 get变量名() 方法，用于获取成员变量的值，方法用public修饰</li><li>提供 set变量名(参数)方法，用于设置成员变量的值，方法用public修饰</li></ul></li><li><p>private关键字的使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> com.itheima_02;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">学生类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供get/set方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        name=n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        age = a;</span><br><span class="line">        <span class="keyword">if</span> (a&lt;<span class="number">0</span> || a&gt;<span class="number">120</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你给的年龄有误！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            age = a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> com.itheima_02;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">学生类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给成员变量赋值</span></span><br><span class="line">        s.setName = <span class="string">&quot;林青霞&quot;</span>;</span><br><span class="line">        s.setAge = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        s.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        s.show();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//或者使用get方法获取成员变量的值（可使用不固定格式）</span></span><br><span class="line">        System.out.println(s.getName + <span class="string">&quot;---&quot;</span> + s.setAge);</span><br><span class="line">        System.out.println(s.getName + <span class="string">&quot;,&quot;</span> + s.setAge);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>this关键字</p><ul><li><p>this修饰的变量用于指代成员变量<br>        方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量<br>     方法的形参没用与成员变量同名，不带this修饰的变量指的是成员变量</p></li><li><p>什么时候使用this：解决局部变量隐藏成员变量</p></li><li><p>this代表所在类的对象引用</p><p>​            方法被哪个对象调用，this就代表哪个对象</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="comment">//name = name;</span></span><br><span class="line">        <span class="built_in">this</span>.name = name;    <span class="comment">//this 关键字</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>this内存原理</p><blockquote><p>CHART： this内存原理</p></blockquote></li><li><p>封装</p><ol><li>封装概述：</li><li>封装是面向对象三大特征之一（封装、继承、多态）<ol start="2"><li>是面向对象编程语言对客观世界的模拟，客观世界里成员变量都是隐藏在对象内部的，外界是无法直接操作的</li></ol></li></ol></li><li><p>封装原则：</p><ol><li><p>将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问</p></li><li><p>成员变量private，提供对应的getXxx() &#x2F; setXxx()方法</p></li><li><p>封装优点：</p><ol><li>通过方法来控制成员变量的操作，提高了代码的安全性</li></ol></li><li><p>把代码用方法进行封装，提高了代码的复用性</p></li></ol></li></ol><h2 id="12-5-构造方法"><a href="#12-5-构造方法" class="headerlink" title="12.5  构造方法"></a>12.5  构造方法</h2><ol><li><p>构造方法概念：构造方法是一种特殊的方法</p><p>作用：创建对象</p><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class 类名&#123;</span><br><span class="line">修饰符 类名(参数)&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>功能：完成对数据的初始化</p></li><li><p>注意事项：</p><ol><li><p>构造方法的创建：</p><p>​            如果没有定义构造方法，系统将给出一个默认的无参数构造方法</p><p>​            如果定义了构造方法，系统将不再提供默认的构造方法</p></li><li><p>构造方法的重载：</p><p>​            如果自定义了带参构造方法，还要使用无参数构造方法，就必须再写一个无参数构造方法</p></li><li><p>推荐的使用方式：</p><p>​            无论是否使用，都手工书写无参数构造方法</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    public Student()&#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;无参构造方法&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法的重载：构造方法可以给定参数赋值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span>&#123;&#125;   <span class="comment">//无参构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(<span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>标准类的制作（重点）</p><ol><li><p>成员变量：</p><p>​            使用private修饰</p></li><li><p>构造方法：</p><p>​            提供一个无参构造方法</p><p>​            提供一个带多个参数的构造方法</p></li><li><p>成员方法：</p><p>​            提供每一个成员变量对应的setXxx() &#x2F; getXxx()</p><p>​            提供一个显示对象信息的show()</p></li><li><p>创建对象并为其成员变量赋值的两种方式：</p><p>​            无参构造方法创建对象后使用setXxx()赋值</p><p>​            使用带参构造方法直接创建带有属性值的对象</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_09;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    成员变量</span></span><br><span class="line"><span class="comment">        使用private修饰</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    构造方法</span></span><br><span class="line"><span class="comment">        提供一个无参构造方法</span></span><br><span class="line"><span class="comment">        提供一个带多个参数的构造方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    成员方法</span></span><br><span class="line"><span class="comment">        提供每一个成员变量对应的setXxx()/getXxx()</span></span><br><span class="line"><span class="comment">        提供一个显示对象信息的show()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//成员方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.age= age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;,&quot;</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_09;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    创建对象并为其成员变量赋值的两种方法</span></span><br><span class="line"><span class="comment">        1.无参数构造方法创建对象后使用set赋值</span></span><br><span class="line"><span class="comment">        2.使用带参数构造方法直接创建带有属性值的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.无参构造方法创建对象后使用setXxx()赋值</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s1.setName(<span class="string">&quot;林青霞&quot;</span>);</span><br><span class="line">        s1.setAge(<span class="number">30</span>);</span><br><span class="line">        s1.show();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.使用带参数的构造方法直接创建带有属性值的对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;林青霞&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        s2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="13-字符串"><a href="#13-字符串" class="headerlink" title="13 字符串"></a>13 字符串</h1><h2 id="13-1-API"><a href="#13-1-API" class="headerlink" title="13.1 API"></a>13.1 API</h2><ol><li><p>API概述：(Application Programming Interface)：应用程序编程接口</p><p>Java中的API：指得是JDK中提供各种功能的Java类</p><p>​            这些类是将底层的实现封装起来，我们不需要关心这些类是如何实现的</p><p>​            只需要学习如何使用这些类，可以通过帮助文档来学习这些API如何使用</p></li><li><p>帮助文档的使用</p></li><li><p>API使用练习</p><p>需求：按照帮助文档的使用步骤学习Scanner 类的使用，并实现键盘录入一个字符串，最后输出在控制台</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Scanner：用于获取键盘录入数据</span></span><br><span class="line"><span class="comment">    public String nextLine(); 获取键盘录入字符串数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//接收数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串数据：&quot;</span>);</span><br><span class="line">        <span class="comment">//sc.nextLine();</span></span><br><span class="line">        <span class="comment">//Ctrl + Alt + V  : 生成左边的快捷键</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;你输入的数据是：&quot;</span> + line);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:</p><p>​            调用方法的时候，如果方法有明确的返回值，我们用变量接收</p><p>​            可以手动完成，也可以使用快捷键的方式完成（Ctrl+Alt+V）</p></li></ol><h2 id="13-2-String"><a href="#13-2-String" class="headerlink" title="13.2 String"></a>13.2 String</h2><ol><li><p>String概述</p><ul><li>String类在java.lang包下，所以使用的时候不需要导包</li><li>String类代表字符串，Java程序中的所有字符串文字（例如“abc”）都被实现为此类的实例；也就是说，Java程序中所有的双引号字符串，都是String类的对象</li></ul><p>字符串的特点</p><ul><li>字符串不可变，它们的值在创建后不能被更改</li><li>虽然String的值是不可变的，但是它们可以被共享</li><li>字符串效果上相当于字符数组（char[]），但是底层原理是字节数组（byte[]）</li></ul></li><li><p>String构造方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public String()</td><td>创建一个空白字符串对象,不含有任何内容</td></tr><tr><td>public String(char[] chs)</td><td>根据字符组的内容,创建字符串对象</td></tr><tr><td>public String() bys</td><td>根据字节数组的内容,来创建字符串对象</td></tr><tr><td>String s &#x3D; “abs”</td><td>直接赋值的方法来创建字符串对象,内容就是abs（推荐使用直接赋值的方式的带字符串）</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//public String()：创建一个空白字符串对象，不含有任何内容</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;s1:&quot;</span> + s1);<span class="comment">//输出 s1：</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//public String(char[] chs)：根据字符数组的内容，来创建字符串对象</span></span><br><span class="line">        <span class="type">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br><span class="line">        System.out.println(<span class="string">&quot;s2:&quot;</span> + s2);<span class="comment">//输出 s2：abc</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//public String(byte[] bys)：根据字节数组的内容，来创建字符串对象</span></span><br><span class="line">        <span class="type">byte</span>[] bys = &#123;<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>&#125;;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bys);</span><br><span class="line">        System.out.println(<span class="string">&quot;s3:&quot;</span> + s3);<span class="comment">//输出 s3：abc</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//String s = &quot;abc&quot;   直接赋值的方法创建字符串对象，内容就是abc</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;   <span class="comment">// 这里是没有使用构造方法的</span></span><br><span class="line">        System.out.println(<span class="string">&quot;s4:&quot;</span> + s4);<span class="comment">//输出 s4：abc</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>String对象的特点</p><ol><li><p>通过new创建的字符串对象，每一次new都会申请一个内存空间，虽然内容相同，但是地址值不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line"><span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br><span class="line"><span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br></pre></td></tr></table></figure><p>上面的代码中，JVM会首先创建一个字符数组，然后每一次new的时候都会有一个新的地址，只不过s1和s2参考的字符串内容是相同的</p></li><li><p>以””方式给出的字符串，只要字符序列相同(顺序和大小写)，无论在程序代码中出现几次，</p><p>JVM都只会建立一个String 对象，并在字符串池中维护</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;  </span><br><span class="line"><span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;  </span><br></pre></td></tr></table></figure><p>在上面的代码中，针对第一行代码，JVM会建立一个String对象放在字符串池中，并给s3参考</p><p>第二行则让s4直接参考字符串池中的String对象，也就是说它们本质上是同一个对象</p></li></ol></li><li><p>字符串的比较</p><ol><li>使用&#x3D;&#x3D;做比较<ul><li>基本类型：比较的是数据值是否相同</li><li>引用类型：比较的是地址值是否相同</li></ul></li><li>字符串是对象，它比较内容是否相同，是通过一个方法来实现的，这个方法叫：equals()，返回值为bool类型<ul><li>public boolean equals(Object anObject)：将此字符串与指定对象进行比较。由于我们比较的是字符串对象，所以参数直接传递一个字符串</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    使用 == 做比较</span></span><br><span class="line"><span class="comment">        基本类型：比较的是数据值是否相同</span></span><br><span class="line"><span class="comment">        引用类型：比较的是地址值是否相同</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public boolean equals(Object anObject)</span></span><br><span class="line"><span class="comment">    将此字符串与指定对象进行比较</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//构造方法的方式得到对象</span></span><br><span class="line">        <span class="type">char</span>[] chs = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(chs);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//直接赋值的方式得到对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//比较字符串对象地址是否相同</span></span><br><span class="line">        System.out.println(s1==s2);<span class="comment">//地址不相同</span></span><br><span class="line">        System.out.println(s2==s3);<span class="comment">//地址不相同</span></span><br><span class="line">        System.out.println(s3==s4);<span class="comment">//地址相同</span></span><br><span class="line">        System.out.println(<span class="string">&quot;--------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//比较字符串内容是否相同</span></span><br><span class="line">        System.out.println(s1.equals(s2));<span class="comment">//内容均相同</span></span><br><span class="line">        System.out.println(s1.equals(s3));</span><br><span class="line">        System.out.println(s3.equals(s4));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>案例：用户登录</p><p>需求:已知用户名和密码，用程序实现用户登录，总共三次机会，给出相应的提示</p><ol><li>已知用户名和密码，定义两个字符串</li><li>键盘录入要登录的用户名和密码，用Scanner实现</li><li>拿键盘录入的用户名、密码和已知的用户名、密码进行比较，给出相应的提示。字符串内容比较，用equals()方法实现</li><li>用循环实现多次机会，这里的次数明确，采用for循环，并在登录成功的时候，使用break结束</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//已知用户名和密码，定义两个字符串表示即可</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;itheima&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;czbk&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//for循环实现多次机会</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//键盘录入要登录的用户名和密码，用Scanner实现</span></span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入用户名：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//进行比较</span></span><br><span class="line">            <span class="keyword">if</span> (name.equals(username) &amp;&amp; pwd.equals(password)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">2</span> - i == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;你的账户被锁定，请与管理员联系&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;登录失败，你还有&quot;</span> + (<span class="number">2</span> - i) + <span class="string">&quot;次机会&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例：遍历字符串</p><p>需求：键盘录入一个字符串,使用程序实现在控制台遍历该字符串</p><ol><li><p>键盘录入一个字符串，用Scanner实现</p></li><li><p>遍历字符串，首先要能够获取到字符串中的每一个字符</p><p>​            public char charAt(int index)：返回指定索引处的char值，字符串的索引也是从0开始的</p></li><li><p>遍历字符串，其次是要能够获取到字符串的长度</p><p>​            public int length()：返回此字符串的长度</p><p>​            数组的长度：数组名.length</p><p>​            字符串的长度：字符串对象.length()</p></li><li><p>遍历字符串的通用格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">s.charAt(i);<span class="comment">//就是指定索引处的字符值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//键盘录入一个字符串，用Scanner实现</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历字符串，首先要能够获取到字符串的每一个字符</span></span><br><span class="line">        <span class="comment">//length()方法获取字符串长度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; line.length(); i++) &#123;</span><br><span class="line">            System.out.println(line.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例：统计字符次数</p><p>需求：键盘输入一个字符串,统计该字符串大小写字符,数字字符的个数出现的次数</p><ol><li><p>键盘录入一个字符串，用Scanner实现</p></li><li><p>要同级三种类型的字符个数，需定义三个统计变量，初始值都为0</p></li><li><p>遍历字符串，得到每一个字符</p></li><li><p>判断该字符属于哪种类型，然后对应类型+1</p><p>​            大写字母：ch&gt;&#x3D;’A’ &amp;&amp;c h&lt;&#x3D;’Z’</p><p>​            小写字母：ch&gt;&#x3D;’a’ &amp;&amp; ch&lt;&#x3D;’z’</p><p>​            数字：ch&gt;&#x3D;0 &amp;&amp; ch&lt;&#x3D;9</p></li><li><p>输出三个类型的字符个数</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringTest03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//录入</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入字符串：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">DaXie</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">XiaoXie</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ZiMu</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; line.length(); i++) &#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> line.charAt(i);</span><br><span class="line">            <span class="comment">//判断</span></span><br><span class="line">            <span class="keyword">if</span> (ch &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">                DaXie += <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">                XiaoXie += <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">                ZiMu += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;大写字母个数：&quot;</span> + DaXie);</span><br><span class="line">        System.out.println(<span class="string">&quot;小写字母个数：&quot;</span> + XiaoXie);</span><br><span class="line">        System.out.println(<span class="string">&quot;数字个数：&quot;</span> + ZiMu);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例：拼接字符串</p><p>需求：定义一个方法,吧int类型的数据按照指定格式拼接成一个字符串返回,调用该方法并在控制台输出结果</p><ol><li>定义一个int类型的数组，用静态初始化完成数组元素的初始化</li><li>定义一个方法，用于把int数组中的数据按照指定格式拼接乘一个字符串返回。返回值类型是String，参数列表int[] arr</li><li>在方法中遍历数组，按照要求拼接</li><li>调用方法，用一个变量接收结果</li><li>输出结果</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_03;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    拼接字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringTest04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        <span class="comment">//调用方法，接收结果</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> arrayToString(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;s: &quot;</span>+ s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">arrayToString</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="comment">//在方法中遍历数组，按照要求进行拼接</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        s += <span class="string">&quot;[&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                s += arr[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                s += arr[i];</span><br><span class="line">                s += <span class="string">&quot;, &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        s += <span class="string">&quot;]&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例：字符串翻转</p><p>需求：键盘输入一个字符串,输出该字符串的反转;</p><ol><li>键盘录入一个字符串，用Scanner实现</li><li>定义一个方法，实现字符串反转。返回值String，参数String s</li><li>在方法中把字符串倒着遍历，然后把每一个得到的字符拼接成一个字符串并返回</li><li>调用方法，用一个变量接收结果</li><li>输出结果</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    字符串反转</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringTest05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        </span><br><span class="line">        <span class="type">String</span> <span class="variable">sReverse</span> <span class="operator">=</span> StringToReverse(s);</span><br><span class="line">        System.out.println(<span class="string">&quot;反转后：&quot;</span> + sReverse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">StringToReverse</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ss</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> s.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            ss += s.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ss;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>通过帮助文档查看String中的方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public boolean equals()(Object anObject)</td><td>比较字符串的内容，严格区分大小写（用户名和密码）</td></tr><tr><td>public char charAt(int index)</td><td>返回指定索引处的char值</td></tr><tr><td>public int length()</td><td>返回此字符串的长度</td></tr></tbody></table></li></ol><h2 id="13-3-StringBuilder"><a href="#13-3-StringBuilder" class="headerlink" title="13.3 StringBuilder"></a>13.3 StringBuilder</h2><ol><li><p>StringBuilder概述</p><p>如果对字符串进行拼接操作，每次拼接，都会构建一个新的String对象，既耗时，又浪费内存空间，而这种操作还不可避免，我们可以通过Java提供的StringBuilder类就来解决这个问题</p><ul><li>StringBuilder是一个可变的字符串类，我们可以把它看成是一个容器<br>这里的可变指的是StringBuilder对象中的内容是可变的</li><li>String和StringBuilder的区别:<br>String:内容是不可变的StringBuilder:内容是可变的</li></ul></li><li><p>StringBuilder构造方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringBuilder()</td><td>创建一个空白字符串对象,不包含任何内容</td></tr><tr><td>public StringBuilder(String str)</td><td>根据字符串内容创建可变字符串对象</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_01;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    StringBuilder构造方法</span></span><br><span class="line"><span class="comment">        public StringBuilder()：创建一个空白可变字符串对象，不含有任何内容</span></span><br><span class="line"><span class="comment">        public StringBuilder(String str)：根据字符串的内容，来创建可变字符串对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.public StringBuilder()：创建一个空白可变字符串对象，不含有任何内容</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;sb:&quot;</span> + sb);</span><br><span class="line">        System.out.println(<span class="string">&quot;sb.length():&quot;</span> + sb.length());</span><br><span class="line">        System.out.println(<span class="string">&quot;--------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.public StringBuilder(String str)：根据字符串的内容，来创建可变字符串对象</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;sb2:&quot;</span> + sb2);</span><br><span class="line">        System.out.println(<span class="string">&quot;sb2.length():&quot;</span> + sb2.length());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>StringBuilder添加和反转的方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringBuilder append(任意类型);</td><td>添加数据，并返回对象本身</td></tr><tr><td>public StringBuilder reverse();</td><td>返回相反的字符序列</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加</span></span><br><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb3</span> <span class="operator">=</span> sb.append(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;sb:&quot;</span> + sb);</span><br><span class="line">        System.out.println(<span class="string">&quot;sb2:&quot;</span> + sb2);</span><br><span class="line">        System.out.println(<span class="string">&quot;-----------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;sb==sb2:&quot;</span> + (sb==sb2));</span><br><span class="line">        System.out.println(<span class="string">&quot;sb==sb3:&quot;</span> + (sb==sb3));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//翻转</span></span><br><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    StringBuilder 的添加和反转方法</span></span><br><span class="line"><span class="comment">        public StringBuilder append(任意类型)：添加数据，并返回对象本身</span></span><br><span class="line"><span class="comment">        public StringBuilder reverse()：返回相反的字符序列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="comment">//        sb.append(&quot;hello&quot;);</span></span><br><span class="line"><span class="comment">//        sb.append(&quot;world&quot;);</span></span><br><span class="line"><span class="comment">//        sb.append(&quot;java&quot;);</span></span><br><span class="line"><span class="comment">//        sb.append(100);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//链式编程</span></span><br><span class="line">        sb.append(<span class="string">&quot;hello&quot;</span>).append(<span class="string">&quot;world&quot;</span>).append(<span class="string">&quot;java&quot;</span>).append(<span class="number">100</span>);</span><br><span class="line">        System.out.println(sb);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反转</span></span><br><span class="line">        sb.reverse();</span><br><span class="line">        System.out.println(sb);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>String和StringBuilder的相互转换:</p><ul><li><p>StringBuilder转换为String： </p><p>public String toString()：通过toString()就可以实现把StringBuilder转换为String</p></li><li><p>String转换为StringBuilder： </p><p>public StringBuilder(String s)：通过构造方法就可以实现把String转换为StringBuilder</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.StringBuilder to String</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        sb.append(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="comment">//String s = sb; 是错误做法</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">        System.out.println(s);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.String to StringBuilder</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">ss</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        <span class="comment">//StringBuilder s = ss; 是错误的</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(ss);</span><br><span class="line">        System.out.println(sb2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例：拼接字符串</p><p>需求：定义一个方法，把int数组中的数据按照指定的格式拼接成一个字符串返回，调用该方法，并在控制台输出结果。例如，数组为int [] arr &#x3D; {1, 2, 3}; ，执行方法后的输出结果为：[1,2,3]</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> pinJie(arr);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">pinJie</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        </span><br><span class="line">        sb.append(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            sb.append(arr[i]);</span><br><span class="line">            <span class="keyword">if</span> (i != arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例：字符串翻转</p><p>需求：定义一个方法，实现字符串反转。键盘录入一个字符串，调用该方法后，在控制台输出结果。例如，键盘录入abc，输出结果cba</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个字符串：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        </span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> stringReverse(line);</span><br><span class="line">        System.out.println(<span class="string">&quot;反转后：&quot;</span> + s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">stringReverse</span><span class="params">(String s)</span>&#123;</span><br><span class="line"><span class="comment">//        StringBuilder sb = new StringBuilder(s);</span></span><br><span class="line"><span class="comment">//        sb.reverse();</span></span><br><span class="line"><span class="comment">//        String ss = sb.toString();</span></span><br><span class="line"><span class="comment">//        return ss;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//用一行代码实现上面功能</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(s).reverse().toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>通过帮助文档查看StringBuilder中的方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public StringBuilder append(任意类型);</td><td>添加数据，并返回对象本身</td></tr><tr><td>public StringBuilder reverse();</td><td>返回相反的字符序列</td></tr><tr><td>public String toString()</td><td>通过toString()就可以实现把StringBuilder转换为String</td></tr></tbody></table></li></ol><h1 id="14-集合基础"><a href="#14-集合基础" class="headerlink" title="14 集合基础"></a>14 集合基础</h1><h2 id="一、集合基础"><a href="#一、集合基础" class="headerlink" title="一、集合基础"></a>一、集合基础</h2><ol><li><p>集合概念：</p><ul><li><p>集合类的特点：提供一种存储空问可变的存储模型，存储的数据容量可以发生改变</p></li><li><p>集合类有很多，目前我们先学习一个: ArrayList</p><p>ArrayList<E>：</p><p>​            是可调整大小的数组实现，ArrayList<String>、ArrayList<int></p><p>​            是一种特殊的数据类型，泛型</p></li></ul></li><li><p>ArrayList构造方法和添加方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public ArrayList()</td><td>创建一个空的集合对象</td></tr><tr><td>public boolean add(E e)</td><td>将指定的元素追加到此集合的末尾</td></tr><tr><td>public void add(int index,E element)</td><td>在此集合的指定位置插入指定的元素</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    ArrayList构造方法：</span></span><br><span class="line"><span class="comment">        public ArrayList()：创建一个空的集合对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    ArrayList添加方法：</span></span><br><span class="line"><span class="comment">        public bollean add(E e)：将指定的袁术追加到此集合的末尾</span></span><br><span class="line"><span class="comment">        public void add(int index, E,element)：在此集合中的指定未知插入指定的元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//public ArrayList()：创建一个空的集合对象</span></span><br><span class="line">        <span class="comment">//ArrayList&lt;String&gt; array = new ArrayList&lt;&gt;();</span></span><br><span class="line">        ArrayList&lt;String&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();  <span class="comment">//这两个都可以</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//add添加元素</span></span><br><span class="line">        System.out.println(array.add(<span class="string">&quot;hello&quot;</span>));<span class="comment">//会输出true，表示添加成功</span></span><br><span class="line">        array.add(<span class="string">&quot;world&quot;</span>);<span class="comment">//两种方法添加元素都可以</span></span><br><span class="line">        array.add(<span class="string">&quot;100&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//add指定位置添加元素</span></span><br><span class="line">        array.add(<span class="number">1</span>, <span class="string">&quot;javase&quot;</span>);   <span class="comment">//如果索引超出会报错</span></span><br><span class="line">        array.add(<span class="number">4</span>, <span class="string">&quot;javaee&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出集合</span></span><br><span class="line">        System.out.println(<span class="string">&quot;array:&quot;</span> + array);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ArrayList的常用方法</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public boolean remove(Object o)</td><td>删除指定元素,返回删除是否成功,true或false</td></tr><tr><td>public E remove(int index)</td><td>删除指定索引处的元素,返回被删除元素</td></tr><tr><td>public E set(int index,E elem)</td><td>修改指定索引处的元素,返回被修改的元素</td></tr><tr><td>public E get(int index)</td><td>返回指定索引处的元素</td></tr><tr><td>public int size()</td><td>返回集合中的元素个数</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Array常用方法：</span></span><br><span class="line"><span class="comment">        remove删除指定元素</span></span><br><span class="line"><span class="comment">        remove删除指定索引处的元素</span></span><br><span class="line"><span class="comment">        set修改指定索引处的元素</span></span><br><span class="line"><span class="comment">        get获取指定索引处的元素</span></span><br><span class="line"><span class="comment">        size()返回集合元素个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建集合</span></span><br><span class="line">        ArrayList&lt;String&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加元素</span></span><br><span class="line">        array.add(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">        array.add(<span class="number">1</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        array.add(<span class="string">&quot;java&quot;</span>);</span><br><span class="line">        array.add(<span class="string">&quot;python&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;attay:&quot;</span> + array);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.删除指定元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot; 删除world：&quot;</span> + array.remove(<span class="string">&quot;world&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot; 删除javaee：&quot;</span> + array.remove(<span class="string">&quot;javaee&quot;</span>)); <span class="comment">//没有这个,返回false</span></span><br><span class="line">        System.out.println(<span class="string">&quot;attay1:&quot;</span> + array);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.指定索引</span></span><br><span class="line">        System.out.println(<span class="string">&quot;删除指定索引1，返回索引对应的值：&quot;</span> + array.remove(<span class="number">1</span>));  <span class="comment">//返回索引值的元素</span></span><br><span class="line">        <span class="comment">//System.out.println(array.remove(3));   //删除时索引越界会报错</span></span><br><span class="line">        System.out.println(<span class="string">&quot;attay2:&quot;</span> + array);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.修改索引对应的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;修改索引1的值，返回被修改的值：&quot;</span> + array.set(<span class="number">1</span>, <span class="string">&quot;C++&quot;</span>));</span><br><span class="line">        <span class="comment">//注意：索引越界会报错</span></span><br><span class="line">        System.out.println(<span class="string">&quot;attay3:&quot;</span> + array);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.返回指定索引处的元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot;返回0索引的元素：&quot;</span> + array.get(<span class="number">0</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;attay4:&quot;</span> + array);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.获取元素个数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;元素个数：&quot;</span> + array.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>案例：存储字符串并遍历</p><p>需求：创建一个存储字符串集合,存储个3字符串元素,使用程序实现在控制台遍历该集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListTest01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建集合对象</span></span><br><span class="line">        ArrayList&lt;String&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加元素</span></span><br><span class="line">        array.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        array.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        array.add(<span class="string">&quot;ccc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;array.size(); i++)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>案例：存储学生对象并遍历</p><p>需求：创建一个存储学生对象的集合，存储三个学生对象，使用程序实现在控制台遍历集合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package com.itheima_02;</span><br><span class="line">/*</span><br><span class="line">学生类</span><br><span class="line">*/</span><br><span class="line">public class Student &#123;</span><br><span class="line">private String name;</span><br><span class="line">private int age;</span><br><span class="line"></span><br><span class="line">//无参数构造方法</span><br><span class="line">public Student() &#123;&#125;</span><br><span class="line"></span><br><span class="line">//带参数构造方法</span><br><span class="line">public Student(String name,int age) &#123;</span><br><span class="line">this.name = name;</span><br><span class="line">this.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setName(String name) &#123;</span><br><span class="line">this.name = name</span><br><span class="line">&#125;</span><br><span class="line">public String getName() &#123;</span><br><span class="line">return name;</span><br><span class="line">&#125;</span><br><span class="line">public void setAge(int age) &#123;</span><br><span class="line">this.age = age;</span><br><span class="line">&#125;</span><br><span class="line">public String getAge() &#123;</span><br><span class="line">return age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建集合对象</span></span><br><span class="line">        ArrayList&lt;Student&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();  <span class="comment">//括号里面改了</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建学生对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;林青霞&quot;</span>, <span class="number">30</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;风清扬&quot;</span>, <span class="number">33</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;张曼玉&quot;</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加学生对象到集合中</span></span><br><span class="line">        array.add(s1);</span><br><span class="line">        array.add(s2);</span><br><span class="line">        array.add(s3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            System.out.println(s.getName() + <span class="string">&quot;,&quot;</span> + s.getAge());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需求：创建一个存储学生对象的集合,存储三个学生对象,使用程序实现遍历集合；学生的姓名和年龄来自键盘录入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima_02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义学生类（但name和age 都定义为String类型）</span></span><br><span class="line">        <span class="comment">//创建集合对象</span></span><br><span class="line">        ArrayList&lt;Student1&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student1&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入</span></span><br><span class="line">        addStudent(array);</span><br><span class="line">        addStudent(array);</span><br><span class="line">        addStudent(array);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历集合</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student1</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            System.out.println(s.getName() + <span class="string">&quot;,&quot;</span> + s.getAge());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为了提高代码的复用性，用方法改进程序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student1&gt; array)</span>&#123;</span><br><span class="line">        <span class="comment">//键盘录入</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生年龄：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建学生对象</span></span><br><span class="line">        <span class="type">Student1</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student1</span>();</span><br><span class="line">        s.setName(name);</span><br><span class="line">        s.setAge(age);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//往集合中添加学生对象</span></span><br><span class="line">        array.add(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="15-学生管理系统"><a href="#15-学生管理系统" class="headerlink" title="15 学生管理系统"></a>15 学生管理系统</h1><h2 id="一、项目演示"><a href="#一、项目演示" class="headerlink" title="一、项目演示"></a>一、项目演示</h2><ul><li>欢迎来到学生管理系统：<ol><li>添加学生</li><li>删除学生</li><li>修改学生</li><li>查看所有学生</li><li>退出</li></ol></li></ul><h2 id="二、学生类"><a href="#二、学生类" class="headerlink" title="二、学生类"></a>二、学生类</h2><ol><li><p>学生类：</p><p>​            Student</p></li><li><p>成员变量：</p><p>​            学号：sid</p><p>​            姓名：name</p><p>​            年龄：age</p><p>​            居住地：address</p></li><li><p>构建方法：</p><p>​            无参构造</p><p>​            带四个参数的构造</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">package com.itheima;</span><br><span class="line">/*</span><br><span class="line">    学生类</span><br><span class="line"> */</span><br><span class="line">public class Student &#123;</span><br><span class="line">    //学号</span><br><span class="line">    private String  sid;</span><br><span class="line">    //姓名</span><br><span class="line">    private String name;</span><br><span class="line">    //年龄</span><br><span class="line">    private String age;</span><br><span class="line">    //居住地</span><br><span class="line">    private String address;</span><br><span class="line"></span><br><span class="line">    //构造函数</span><br><span class="line">    public Student()&#123;&#125;</span><br><span class="line">    public Student(String sid, String name, String age, String address)&#123;</span><br><span class="line">        this.sid = sid;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.age = age;</span><br><span class="line">        this.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //Alt + insert 可以快速生成这些东西</span><br><span class="line">    public String getSid() &#123;</span><br><span class="line">        return sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setSid(String sid) &#123;</span><br><span class="line">        this.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getAge() &#123;</span><br><span class="line">        return age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setAge(String age) &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getAddress() &#123;</span><br><span class="line">        return address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setAddress(String address) &#123;</span><br><span class="line">        this.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>构造方法快捷键：Alt+Insert，选Constructor，再选择无参构造&#x2F;带参构造</li><li>get&#x2F;set方法快捷键：Alt+Insert，选Getters and Setters，（全选：从开头按住Shift，点末尾）</li></ul><h2 id="三、主界面"><a href="#三、主界面" class="headerlink" title="三、主界面"></a>三、主界面</h2><ol><li>用输出语句完成主界面的编写</li><li>用Scanner实现键盘录入数据</li><li>用switch语句完成操作的选择</li><li>用循环完成再次回到主界面</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">学生管理系统</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentManager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建集合对象，用于存储学生数据</span></span><br><span class="line">        ArrayList&lt;Student&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//用循环完成再次回到主界面</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="comment">//用输出语句完成主界面</span></span><br><span class="line">            System.out.println(<span class="string">&quot;------欢迎来到学生管理系统------&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;1.添加学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;2.删除学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;3.修改学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;4.查看所有学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;5.退出&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入你的选择：&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//用Scanner录入信息</span></span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//用Switch语句完成选择</span></span><br><span class="line">            <span class="keyword">switch</span> (line) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;添加学生&quot;);</span></span><br><span class="line">                    addStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;删除学生&quot;);</span></span><br><span class="line">                    delectStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;修改学生&quot;);</span></span><br><span class="line">                    updateStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;查看所有学生&quot;);</span></span><br><span class="line">                    findAllStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;谢谢使用&quot;</span>);</span><br><span class="line">                    <span class="comment">//break;</span></span><br><span class="line">                    System.exit(<span class="number">0</span>);   <span class="comment">//JVM退出，即Java虚拟机退出</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、添加学生"><a href="#四、添加学生" class="headerlink" title="四、添加学生"></a>四、添加学生</h2><ol><li><p>用键盘录入选择添加学生</p></li><li><p>定义一个方法，用于添加学生</p><p>​            显示提示信息，提示要输入何种信息</p><p>​            键盘录入学生对象所需要的数据</p><p>​            创建学生对象，把键盘录入的数据赋值给学生对象的成员变量</p><p>​            将学生对象添加到集合中，保存</p><p>​            给出添加成功提示</p></li><li><p>调用方法</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentManager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;...&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于添加学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">//String sid;  //这里需要全局</span></span><br><span class="line">        <span class="comment">//while(true) &#123;//为了能让程序回到这里，我们使用循环实现</span></span><br><span class="line">        <span class="comment">//    System.out.println(&quot;请输入学生学号：&quot;);</span></span><br><span class="line">        <span class="comment">//    sid = sc.nextLine();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//    boolean flag = isUsed(array, sid);</span></span><br><span class="line">        <span class="comment">//    if (flag) &#123;</span></span><br><span class="line">        <span class="comment">//        System.out.println(&quot;你输入的学号已经被使用！请重新输入：&quot;);</span></span><br><span class="line">        <span class="comment">//    &#125;else&#123;</span></span><br><span class="line">        <span class="comment">//        break;</span></span><br><span class="line">        <span class="comment">//    &#125;</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入学生对象所需要的数据</span></span><br><span class="line">    System.out.println(<span class="string">&quot;请输入学生学号：&quot;</span>);<span class="comment">//判断：学号不能重复</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sid</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生年龄：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生居住地：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建学生对象，把键盘录入的数据赋值给学生对象的成员变量</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.setSid(sid);</span><br><span class="line">        s.setName(name);</span><br><span class="line">        s.setAge(age);</span><br><span class="line">        s.setAddress(address);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将学生对象添加到集合中</span></span><br><span class="line">        array.add(s);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;添加学生成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五、查看所有学生"><a href="#五、查看所有学生" class="headerlink" title="五、查看所有学生"></a>五、查看所有学生</h2><ol><li><p>用键盘录入查看所有学生信息</p></li><li><p>定义一个方法，用于查看所有学生信息</p><p>​            显示表头信息</p><p>​            将集合中数据取出按照对应格式显示学生信息，年龄显示补充“岁”</p></li><li><p>调用方法</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentManager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;...&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于添加学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;...&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一个方法，用于查看学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">findAllStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="comment">//升级版(判断：集合中是否有数据)</span></span><br><span class="line">        <span class="keyword">if</span>(array.size()==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;无信息，请先添加信息再查询！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;<span class="comment">//为了让程序不再往下执行</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示表头信息</span></span><br><span class="line">        <span class="comment">// \t：tab键的意思</span></span><br><span class="line">        System.out.println(<span class="string">&quot;学号\t\t\t姓名\t\t年龄\t\t居住地&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将集合中数据取出按照对应格式显示学生信息</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            System.out.println(s.getSid() + <span class="string">&quot;\t&quot;</span> + s.getName() + <span class="string">&quot;\t&quot;</span> + s.getAge() + <span class="string">&quot;岁\t&quot;</span> + s.getAddress());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="六、删除学生"><a href="#六、删除学生" class="headerlink" title="六、删除学生"></a>六、删除学生</h2><ol><li><p>用键盘录入选择删除信息</p></li><li><p>定义一个方法，用于删除学生信息</p><p>​            显示提示信息</p><p>​            键盘录入要删除学生的学号</p><p>​            遍历集合将对应学生对象从集合中删除</p><p>​            给出删除成功提示</p></li><li><p>调用方法</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentManager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;...&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于添加学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;...&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一个方法，用于查看学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">findAllStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;...&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一个方法，用于删除学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">delectStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你要删除的学生的学号：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sid</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//int index = -1;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历集合将对应学生对象从集合中删除</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            <span class="keyword">if</span> (s.getSid().equals(sid))&#123;</span><br><span class="line">                <span class="comment">//index = i;</span></span><br><span class="line">                array.remove(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//if (index==-1)&#123;</span></span><br><span class="line">        <span class="comment">//    System.out.println(&quot;该信息不存在！&quot;);</span></span><br><span class="line">        <span class="comment">//&#125; else&#123;</span></span><br><span class="line">            System.out.println(<span class="string">&quot;删除学生成功！&quot;</span>);</span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、修改学生"><a href="#七、修改学生" class="headerlink" title="七、修改学生"></a>七、修改学生</h2><ol><li><p>用键盘录入选择修改学生信息</p></li><li><p>定义一个方法，用于修改学生信息</p><p>​            显示提示信息</p><p>​            键盘录入要修改学生的学号</p><p>​            键盘录入要修改学生的信息</p><p>​            遍历集合修改对应的学生信息</p><p>​            给出修改成功提示</p></li><li><p>调用方法</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentManager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;...&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于添加学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;...&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一个方法，用于查看学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">findAllStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;...&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一个方法，用于删除学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">delectStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;...&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一个方法，用于修改学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">updateStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你要修改的学生的学号：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sid</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入要修改的学生信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生新姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生新年龄：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生新居住地：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.setSid(sid);</span><br><span class="line">        s.setName(name);</span><br><span class="line">        s.setName(age);</span><br><span class="line">        s.setAddress(address);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历集合修改对应的学生信息</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            <span class="keyword">if</span>(student.getSid().equals(sid))&#123;</span><br><span class="line">                array.set(i,s);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;修改信息成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="八、学号不存在问题（删除-x2F-修改操作）"><a href="#八、学号不存在问题（删除-x2F-修改操作）" class="headerlink" title="八、学号不存在问题（删除&#x2F;修改操作）"></a>八、学号不存在问题（删除&#x2F;修改操作）</h2><ol><li><p>在删除&#x2F;修改学生操作前，对学号是否存在进行判断</p><p>​            如果不存在，显示提示信息</p><p>​            如果存在，执行删除&#x2F;修改操作</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//遍历</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">          <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">          <span class="keyword">if</span> (s.getSid().equals(sid))&#123;</span><br><span class="line">              index = i;</span><br><span class="line">              array.remove(i);</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (index==-<span class="number">1</span>)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;该信息不存在！&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;删除学生成功！&quot;</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="九、学号重复问题（添加操作）"><a href="#九、学号重复问题（添加操作）" class="headerlink" title="九、学号重复问题（添加操作）"></a>九、学号重复问题（添加操作）</h2><ol><li><p>定义一个方法，对学号是否被使用进行判断</p><p>​            如果与集合中的某一个学生学号相同，返回true</p><p>​            如果都不相同，返回false</p></li><li><p>在添加学生录入学号后调用该方法</p><p>​            如果返回true，弹出提示，重新输入学号</p><p>​            如果返回false，正常添加学生对象</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//判断学号是否被使用</span><br><span class="line">   public static boolean isUsed(ArrayList&lt;Student&gt; array, String sid)&#123;</span><br><span class="line">       boolean flag = false;</span><br><span class="line">       for(int i=0; i&lt;array.size(); i++)&#123;</span><br><span class="line">           Student s = array.get(i);</span><br><span class="line">           if(s.getSid().equals(sid))&#123;</span><br><span class="line">               flag = true;</span><br><span class="line">               break;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       return flag;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   //在添加学生操作中</span><br><span class="line">   String sid;  //这里需要全局</span><br><span class="line">       while(true) &#123;</span><br><span class="line">           System.out.println(&quot;请输入学生学号：&quot;);</span><br><span class="line">           sid = sc.nextLine();</span><br><span class="line"></span><br><span class="line">           boolean flag = isUsed(array, sid);</span><br><span class="line">           if (flag) &#123;</span><br><span class="line">               System.out.println(&quot;你输入的学号已经被使用！请重新输入：&quot;);</span><br><span class="line">           &#125;else&#123;</span><br><span class="line">               break;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h2 id="十、完整代码"><a href="#十、完整代码" class="headerlink" title="十、完整代码"></a>十、完整代码</h2><ul><li>（1）Student.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    学生类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//学号</span></span><br><span class="line">    <span class="keyword">private</span> String  sid;</span><br><span class="line">    <span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//年龄</span></span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line">    <span class="comment">//居住地</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String sid, String name, String age, String address)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Alt + insert 可以快速生成这些东西</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSid</span><span class="params">(String sid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>（2）StudentManager.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentManager</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建集合对象，用于存储学生数据</span></span><br><span class="line">        ArrayList&lt;Student&gt; array = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="comment">//用输出语句完成主界面</span></span><br><span class="line">            System.out.println(<span class="string">&quot;------欢迎来到学生管理系统------&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;1.添加学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;2.删除学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;3.修改学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;4.查看所有学生&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;5.退出&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入你的选择：&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//用Scanner录入信息</span></span><br><span class="line">            <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">            <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//用Switch语句完成选择</span></span><br><span class="line">            <span class="keyword">switch</span>(line)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;添加学生&quot;);</span></span><br><span class="line">                    addStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;删除学生&quot;);</span></span><br><span class="line">                    delectStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;修改学生&quot;);</span></span><br><span class="line">                    updateStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;查看所有学生&quot;);</span></span><br><span class="line">                    findAllStudent(array);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;5&quot;</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;谢谢使用&quot;</span>);</span><br><span class="line">                    <span class="comment">//break;</span></span><br><span class="line">                    System.exit(<span class="number">0</span>);   <span class="comment">//JVM退出，即Java虚拟机退出</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">addStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String sid;  <span class="comment">//这里需要全局</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入学生学号：&quot;</span>);</span><br><span class="line">            sid = sc.nextLine();</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> isUsed(array, sid);</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;你输入的学号已经被使用！请重新输入：&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生年龄：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生居住地：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建学生对象</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.setSid(sid);</span><br><span class="line">        s.setName(name);</span><br><span class="line">        s.setAge(age);</span><br><span class="line">        s.setAddress(address);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加到学生集合中</span></span><br><span class="line">        array.add(s);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        System.out.println(<span class="string">&quot;添加学生成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断学号是否被使用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isUsed</span><span class="params">(ArrayList&lt;Student&gt; array, String sid)</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            <span class="keyword">if</span>(s.getSid().equals(sid))&#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查看学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">findAllStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="comment">//判断集合中是否有数据</span></span><br><span class="line">        <span class="keyword">if</span>(array.size()==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;无信息，请先添加信息再查询！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示表头信息</span></span><br><span class="line">        <span class="comment">// \t：tab键的意思</span></span><br><span class="line">        System.out.println(<span class="string">&quot;学号\t姓名\t年龄\t\t居住地&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            System.out.println(s.getSid() + <span class="string">&quot;\t&quot;</span> + s.getName() + <span class="string">&quot;\t&quot;</span> + s.getAge() + <span class="string">&quot;岁\t&quot;</span> + s.getAddress());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">delectStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你要删除的学生的学号：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sid</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            <span class="keyword">if</span> (s.getSid().equals(sid))&#123;</span><br><span class="line">                index = i;</span><br><span class="line">                array.remove(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index==-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;该信息不存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除学生成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改学生信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">updateStudent</span><span class="params">(ArrayList&lt;Student&gt; array)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你要修改的学生的学号：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sid</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入要修改的学生信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生新姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生新年龄：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入学生新居住地：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> sc.nextLine();</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        s.setSid(sid);</span><br><span class="line">        s.setName(name);</span><br><span class="line">        s.setName(age);</span><br><span class="line">        s.setAddress(address);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历信息，进行修改</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt; array.size(); i++)&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> array.get(i);</span><br><span class="line">            <span class="keyword">if</span>(student.getSid().equals(sid))&#123;</span><br><span class="line">                array.set(i,s);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//提示修改成功</span></span><br><span class="line">        System.out.println(<span class="string">&quot;修改信息成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java · 辨别Integer.valueof()与Integer.parseInt()与intValue()</title>
      <link href="/2022/04/02/%EF%BC%88others%EF%BC%89/knowledge/Java%20%C2%B7%20%E8%BE%A8%E5%88%ABInteger.valueof()%E4%B8%8EInteger.parseInt()%E4%B8%8EintValue()/"/>
      <url>/2022/04/02/%EF%BC%88others%EF%BC%89/knowledge/Java%20%C2%B7%20%E8%BE%A8%E5%88%ABInteger.valueof()%E4%B8%8EInteger.parseInt()%E4%B8%8EintValue()/</url>
      
        <content type="html"><![CDATA[<h1 id="1-关于Integer-valueof"><a href="#1-关于Integer-valueof" class="headerlink" title="1.关于Integer.valueof()"></a>1.关于Integer.valueof()</h1><ul><li><p>valueOf()方法用于返回给定参数的原生 Number 对象值，参数可以是原生数据类型（8种基本类型、String等）</p></li><li><p>valueOf()是8中基本数据类型的包装类的静态方法（还有string），直接通过类来使用</p><p>例如：valueOf是Integer类的一个静态方法，经过Integer.valueOf（“123”）转换，123就是Integer类型了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Integer</span> <span class="variable">x</span> <span class="operator">=</span>Integer.valueOf(<span class="number">9</span>);</span><br><span class="line"><span class="type">Double</span> <span class="variable">c</span> <span class="operator">=</span> Double.valueOf(<span class="number">5</span>);</span><br><span class="line"><span class="type">Float</span> <span class="variable">a</span> <span class="operator">=</span> Float.valueOf(<span class="string">&quot;80&quot;</span>);   </span><br><span class="line"></span><br><span class="line">System.out.println(x);  <span class="comment">//9</span></span><br><span class="line">System.out.println(c);  <span class="comment">//5.0</span></span><br><span class="line">System.out.println(a);  <span class="comment">//80.0</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="2-关于Integer-parseInt"><a href="#2-关于Integer-parseInt" class="headerlink" title="2.关于Integer.parseInt()"></a>2.关于Integer.parseInt()</h1><ul><li><p>parseInt(string) （最常用）函数可解析一个字符串，并返回一个整数</p></li><li><p>其中参数只能是string类型，如果不为string类型，必须先转为string类型</p><p>同理还有，parseDouble(string)、parsefloat(string)等等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> Integer.parseInt(“<span class="number">9</span>”);</span><br><span class="line"><span class="type">double</span> <span class="variable">c</span> <span class="operator">=</span> Double.parseDouble(“<span class="number">5</span>”);</span><br></pre></td></tr></table></figure></li></ul><h1 id="3-关于intValue"><a href="#3-关于intValue" class="headerlink" title="3.关于intValue()"></a>3.关于intValue()</h1><ul><li><p>intValue()是java.lang.Number类的方法，Number是一个抽象类</p></li><li><p>Java中所有的数值类都继承它。即不单是Integer有intValue方法，Double，Long等都有此类方法</p><p>例如：Float类和Double类的intValue方法，就是丢掉了小数位</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">3.1</span>;</span><br><span class="line">System.out.println(d.intValue());  <span class="comment">//3</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> knowledge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode · 9.回文数</title>
      <link href="/2022/04/02/LeetCode/LeetCode%20%C2%B7%20easy/9.%E5%9B%9E%E6%96%87%E6%95%B0/"/>
      <url>/2022/04/02/LeetCode/LeetCode%20%C2%B7%20easy/9.%E5%9B%9E%E6%96%87%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="9-回文数"><a href="#9-回文数" class="headerlink" title="9.回文数"></a>9.回文数</h1><p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false </p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数</p><ul><li>例如，121 是回文，而 123 不是</li></ul><h2 id="方法一：数字转字符串比较"><a href="#方法一：数字转字符串比较" class="headerlink" title="方法一：数字转字符串比较"></a>方法一：数字转字符串比较</h2><ul><li>整数转为字符串，循环一半长度判断对应元素是否相等即可</li><li>或翻转整个字符串对比</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> String.valueOf(x);</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> s.length();</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> length - <span class="number">1</span>;  <span class="comment">//1.注意下表序号与长度的关系</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= right; i++) &#123;  <span class="comment">//2.用right代替length，减少一半循环</span></span><br><span class="line">            <span class="keyword">if</span> (s.charAt(i) != s.charAt(right)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            right--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">reversedStr</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">StringBuilder</span>(x + <span class="string">&quot;&quot;</span>)).reverse().toString();</span><br><span class="line">        <span class="keyword">return</span> (x + <span class="string">&quot;&quot;</span>).equals(reversedStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法二：数字本身反转"><a href="#方法二：数字本身反转" class="headerlink" title="方法二：数字本身反转"></a>方法二：数字本身反转</h2><ul><li>注意：如果反转后的数字大于int所能表示的最大范围，将遇到整数溢出错误</li><li>可以用long类型防止溢出，long revers &#x3D; 0;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">revers</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">origin</span> <span class="operator">=</span> x;</span><br><span class="line">            <span class="keyword">while</span> (x != <span class="number">0</span>) &#123;</span><br><span class="line">                revers = revers * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">                x = x / <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (revers == origin) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法三：反转一半数字"><a href="#方法三：反转一半数字" class="headerlink" title="方法三：反转一半数字"></a>方法三：反转一半数字</h2><ul><li>通过除10和取余来获取反转一半的数字，避免整数溢出</li><li>分偶数位和奇数位分别比较前后一半数字</li><li>时间复杂度O(log<del>10</del>(n))、空间复杂度O(1)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) &#123;  <span class="comment">//1.特殊情况：当x为负数或x最后一位是0（除0本身）时，一定不是回文数</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">revertedNumber</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; revertedNumber) &#123;  <span class="comment">//2.循环建立反转一半数字</span></span><br><span class="line">            revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">return</span> <span class="variable">x</span> <span class="operator">=</span>= revertedNumber || x == revertedNumber / <span class="number">10</span>;  <span class="comment">//3.注意：奇数位比较不考虑中间数，跳出循环时x&lt;revertedNumber</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>使用int类型时，注意整数溢出的情况</li><li>类似回文比较时，用前指针和后指针比较left&lt;right，可以减少一半循环</li><li>折半处理时，可能要单独处理个数为奇数的情况</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> LeetCode · easy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java · 字符串和数字转换</title>
      <link href="/2022/04/02/%EF%BC%88others%EF%BC%89/knowledge/Java%20%C2%B7%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2/"/>
      <url>/2022/04/02/%EF%BC%88others%EF%BC%89/knowledge/Java%20%C2%B7%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="1-字符串转数字"><a href="#1-字符串转数字" class="headerlink" title="1.字符串转数字"></a>1.字符串转数字</h1><ul><li><p>方法一：通过基本类型对应的包装类，实现把字符串转换成基本类型</p><p>Java为8种基本类型都提供了对应的包装类，8个包装类都提供了一个parseXxx(String str)静态方法用于将字符串转换成基本类型（注意：如果字符串不是数值型字符串，转换将导致一个运行时错误）：</p><ul><li>boolean对应Boolean</li><li>byte对应Byte</li><li>short对应Short</li><li>int对应Integer、</li><li>ong对应Long</li><li>char对应Character</li><li>float对应Float</li><li>double对应Double</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> Byte.parseByte(s);</span><br><span class="line"><span class="type">short</span> <span class="variable">t</span> <span class="operator">=</span> Short.parseShort(s);</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> Integer.parseInt(s);</span><br><span class="line"><span class="type">long</span> <span class="variable">l</span> <span class="operator">=</span> Long.parseLong(s);</span><br><span class="line"><span class="type">Float</span> <span class="variable">f</span> <span class="operator">=</span> Float.parseFloat(s);</span><br><span class="line"><span class="type">Double</span> <span class="variable">d</span> <span class="operator">=</span> Double.parseDouble(s);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">bo</span> <span class="operator">=</span> Boolean.parseBoolean(s);</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> Character.parseCharacter(s);</span><br></pre></td></tr></table></figure></li><li><p>方法二：int i &#x3D; Integer.valueOf(s).intValue();</p><p>valueOf是Integer类的一个静态方法，它是把一个string参数转换为Integer类型</p><p>intValue()是java.lang.Number类的方法，intValue函数，它是将一个Integer类型转换成原始类型int</p></li><li><p>总结：</p><ul><li>方法1：直接使用静态方法，不会产生多余的对象，但会抛出异常</li><li>方法2：Integer.valueOf(s) 相当于new Integer(Integer.parseInt(s))，也会抛异常，但会多产生一个对象</li></ul></li></ul><h1 id="2-数字转字符串"><a href="#2-数字转字符串" class="headerlink" title="2.数字转字符串"></a>2.数字转字符串</h1><ul><li><p>方法一：String s &#x3D; String.valueOf(Object)</p><p>各种数字类型转换成字符串型，其中 value 为任意一种数字类型。将不用担心object是否为null值这一问题</p><p>从源码可以看出null值不用担心的理由。但是我们应当注意到，当object为null时，String.valueOf（object）的值是字符串”null”，而不是null</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * Returns the string representation of the Object argument.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span>   obj   an Object.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> if the argument is null, then a string equal to</span></span><br><span class="line"><span class="comment">  * “null”; otherwise, the value of</span></span><br><span class="line"><span class="comment">  * obj.toString() is returned.</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@see</span>    java.lang.Object#toString()</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">valueOf</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (obj == <span class="literal">null</span>) ? “<span class="literal">null</span>” : obj.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法二：String s &#x3D; Object.toString();</p><p>在使用时要注意，必须保证object不是null值，否则将抛出NullPointerException异常</p></li><li><p>方法三：String s &#x3D; i + “”;</p></li><li><p>方法四：（String）要转换的对象<br>使用这种方法时，需要注意的是类型必须能转成String类型。因此最好用instanceof做个类型检查，<br>以判断是否可以转换。否则容易抛出CalssCastException异常</p></li></ul><p>  注意：定义为Object类型的对象在转成String时语法检查并不会报错，这将可能导致潜在的错误存在。此外因null值可以强制转换为任何java类类型，(String)null也是合法的</p><ul><li>总结：从效率方面看，方法2 &gt; 方法3 &gt; 方法1，且方法1和方法3差别不大</li></ul>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> knowledge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java · 注释</title>
      <link href="/2022/04/01/%EF%BC%88others%EF%BC%89/knowledge/Java%20%C2%B7%20%E6%B3%A8%E9%87%8A/"/>
      <url>/2022/04/01/%EF%BC%88others%EF%BC%89/knowledge/Java%20%C2%B7%20%E6%B3%A8%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="1、版权注释"><a href="#1、版权注释" class="headerlink" title="1、版权注释"></a>1、版权注释</h1><ul><li>版权注释主要用来声明公司的一些基本信息等</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * projectName: xxx</span></span><br><span class="line"><span class="comment"> * fileName: Tk.java </span></span><br><span class="line"><span class="comment"> * packageName: xxxx</span></span><br><span class="line"><span class="comment"> * date: 2017年12月18日下午12:28:39 </span></span><br><span class="line"><span class="comment"> * copyright(c) 2017-2020 xxx公司</span></span><br><span class="line"><span class="comment">   */</span></span><br></pre></td></tr></table></figure><h1 id="2、类注释-Class"><a href="#2、类注释-Class" class="headerlink" title="2、类注释(Class)"></a>2、类注释(Class)</h1><ul><li>类注释(Class)主要用来声明该类用来做什么，以及创建者、创建日期版本、包名等一些信息</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: V1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: fendo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@className</span>: user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@packageName</span>: user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 这是用户类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span>: 2017-07-28 12:20</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure><h1 id="3、构造函数注释-Constructor"><a href="#3、构造函数注释-Constructor" class="headerlink" title="3、构造函数注释(Constructor)"></a>3、构造函数注释(Constructor)</h1><ul><li>构造函数注释(Constructor)主要用来声明该类的构造函数、入参等信息</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**</span><br><span class="line">* <span class="meta">@description</span>: 构造函数</span><br><span class="line">* <span class="meta">@param</span>: [sid, pid]</span><br><span class="line">*/  </span><br></pre></td></tr></table></figure><h1 id="4、方法注释-Methods"><a href="#4、方法注释-Methods" class="headerlink" title="4、方法注释(Methods)"></a>4、方法注释(Methods)</h1><ul><li>方法注释(Methods)主要用来声明该类的作用、入参、返回值、异常等信息:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span>:  fendo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@methodsName</span>: addUser</span></span><br><span class="line"><span class="comment">* <span class="doctag">@description</span>: 添加一个用户</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span>:  xxxx</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span>: String</span></span><br><span class="line"><span class="comment">* <span class="doctag">@throws</span>: </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="5、代码块注释-Block"><a href="#5、代码块注释-Block" class="headerlink" title="5、代码块注释(Block)"></a>5、代码块注释(Block)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实例化一个用户</span></span><br><span class="line"><span class="comment"> * xxxxxxx</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">User user=<span class="keyword">new</span> <span class="title class_">User</span>();</span><br></pre></td></tr></table></figure><h1 id="6、单句注释"><a href="#6、单句注释" class="headerlink" title="6、单句注释"></a>6、单句注释</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User user=<span class="keyword">new</span> <span class="title class_">User</span>();  <span class="comment">//实例化一个用户</span></span><br></pre></td></tr></table></figure><h1 id="7、字段名注释"><a href="#7、字段名注释" class="headerlink" title="7、字段名注释"></a>7、字段名注释</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者使用如下格式:</span></span><br><span class="line"><span class="comment">/**用户名**/</span></span><br><span class="line"><span class="keyword">public</span> String name;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> knowledge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>errors · Hexo</title>
      <link href="/2022/04/01/%EF%BC%88others%EF%BC%89/errors/errors%20%C2%B7%20Hexo/"/>
      <url>/2022/04/01/%EF%BC%88others%EF%BC%89/errors/errors%20%C2%B7%20Hexo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>err: YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key (11:6)</p><p>原因：description:中格式不正确，与空格有关</p><p>类似：YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:  创建的md文件头部声明中没有加空格</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> errors </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode · 1.两数之和</title>
      <link href="/2022/04/01/LeetCode/LeetCode%20%C2%B7%20easy/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2022/04/01/LeetCode/LeetCode%20%C2%B7%20easy/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1.两数之和"></a>1.两数之和</h1><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现</p><p>你可以按任意顺序返回答案</p><h2 id="方法一：暴力枚举"><a href="#方法一：暴力枚举" class="headerlink" title="方法一：暴力枚举"></a>方法一：暴力枚举</h2><ul><li>嵌套两次循环，遍历数组中的每个元素</li><li>若不存在匹配目标值，返回0</li><li>时间复杂度：O(N^2^)，空间复杂度：O(1)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;  <span class="comment">//1.区分：s.length是数组的一个属性；s.length()是字符串的一个方法</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; n; j++) &#123;  <span class="comment">//2.使用i+1开始循环，减少重复匹配</span></span><br><span class="line">                <span class="keyword">if</span>(nums[i] + nums[j] == target) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;i, j&#125;;  <span class="comment">//3.以新建的数组形式，返回两个变量</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//return new int[0];  //4.考虑特殊情况——无答案，返回0</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;No suitable number&quot;</span>);  <span class="comment">//5.自定义抛出一个异常</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法二：哈希表"><a href="#方法二：哈希表" class="headerlink" title="方法二：哈希表"></a>方法二：哈希表</h2><ul><li>在遍历时记录一些信息，以省去一层循环，“空间换时间”</li><li>记录已遍历过的数值和下标，借助查找表实现：<ul><li>哈希表（不需维护查找表中元素的顺序）</li><li>平衡二叉树</li></ul></li><li>创建一个哈希表，对于每一个 x，查询哈希表中是否存在target - x：<ul><li>不存在将x插入到哈希表中</li><li>存在即返回结果</li></ul></li><li>时间复杂度：O(N)，空间复杂度：O(N)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;  </span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> nums.length;  </span><br><span class="line">        Map&lt;Integer, Integer&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();  <span class="comment">//1.初始化哈希表时，建议指定容量（len-1），避免扩容带来的性能消耗</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;len; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">another</span> <span class="operator">=</span> target - nums[i];  <span class="comment">//2.编写代码过程中，有多次使用target - num[i]</span></span><br><span class="line">            <span class="keyword">if</span>(hashMap.containsKey(another)) &#123; </span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;i, hashMap.get(another)&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            hashMap.put(nums[i], i);  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;No suitable number&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Q：为什么哈希表的容量为len-1?</p><p>Q：为什么hashMap.containsKey(value)时间复杂度为O(1)?</p></blockquote><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><ul><li>区分：s.length是数组的一个属性；s.length()是字符串的一个方法</li><li>可以以新建的数组形式，来返回两个变量</li><li>考虑特殊情况——循环结束仍无答案，返回0</li><li>自定义抛出一个异常，throw new IllegalArgumentException(“No suitable number”);  </li><li>初始化哈希表时，建议指定容量（len-1），避免扩容带来的性能消耗</li><li>编写代码过程中，有多次使用的表达式，可以定义一个变量表示</li></ul>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> LeetCode · easy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaSE · Java基础语法①</title>
      <link href="/2022/04/01/Java/JavaSE/JavaSE%20%C2%B7%20Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E2%91%A0/"/>
      <url>/2022/04/01/Java/JavaSE/JavaSE%20%C2%B7%20Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E2%91%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="01-Java概述"><a href="#01-Java概述" class="headerlink" title="01 Java概述"></a>01 Java概述</h1><h2 id="1-1-Java语言发展史"><a href="#1-1-Java语言发展史" class="headerlink" title="1.1 Java语言发展史"></a>1.1 Java语言发展史</h2><ul><li>Java语言是美国Sun公司（Stanford University Network）在1995年推出的计算机语言， 2009年Oracle甲骨文公司收购Sun公司</li><li>Java之父：詹姆斯·高斯林（James Gosling）</li><li>Java的三大版本：<ul><li>Java SE（J2SE，Java 2 Platform Standard Edition，标准版）：它允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。Java SE 包含了支持 Java Web 服务开发的类，并为Java EE和Java ME提供基础</li><li>Java EE（J2EE，Java 2 Platform Enterprise Edition，企业版）：企业版本帮助开发和部署可移植、健壮、可伸缩且安全的服务器端Java 应用程序。Java EE 是在 Java SE 的基础上构建的，它提供 Web 服务、组件模型、管理和通信 API</li><li>Java ME（J2ME，Java 2 Platform Micro Edition，微型版）：Java ME 为在移动设备和嵌入式设备（比如手机、PDA、电视机顶盒和打印机）上运行的应用程序提供一个健壮且灵活的环境</li></ul></li></ul><h2 id="1-2-Java语言跨平台原理"><a href="#1-2-Java语言跨平台原理" class="headerlink" title="1.2 Java语言跨平台原理"></a>1.2 Java语言跨平台原理</h2><ul><li>Java可以在任意操作系统上运行，Windows、Mac、Linux</li><li>在运行Java应用程序的操作系统上，安装一个与操作系统对应的Java虚拟机（JVM Java Virtual Machine）就可以实现Java的跨平台使用了</li></ul><h2 id="1-3-JRE和JDK"><a href="#1-3-JRE和JDK" class="headerlink" title="1.3 JRE和JDK"></a>1.3 JRE和JDK</h2><ul><li><p>JRE（Java Runtime Environment） ：</p><ul><li>是Java程序的运行时环境，它包括JVM和运行时所需要的核心类库</li><li>需要注意的是，JRE是包含JVM的，因此只安装JRE也是可以实现Java的跨平台使用的</li></ul></li><li><p>JDK（Java Development Kit） ：</p><ul><li>是Java程序的开发工具包，包含JRE和开发人员使用的工具</li><li>其中的开发工具包括：编译工具（javac.exe）和运行工具（java.exe）</li><li>如果想开发一个全新的Java程序，必须安装JDK</li></ul></li><li><p>JDK、JRE和JVM的关系：JDK包含JRE和开发工具，JRE包含JVM和核心类库。对于开发人员来说，我们只需要使用JDK就可以满足一切开发和应用的需求</p></li></ul><blockquote><p>CHART：JDK、JRE和JVM的关系</p></blockquote><h1 id="02-第一个程序"><a href="#02-第一个程序" class="headerlink" title="02 第一个程序"></a>02 第一个程序</h1><h2 id="2-1-常用DOS命令"><a href="#2-1-常用DOS命令" class="headerlink" title="2.1 常用DOS命令"></a>2.1 常用DOS命令</h2><table><thead><tr><th>命令</th><th>命令作用</th></tr></thead><tbody><tr><td>盘符名称：</td><td>盘符切换。E：回车，表示切换到E盘</td></tr><tr><td>dir</td><td>查看当前路径下的内容</td></tr><tr><td>cd 目录</td><td>进入单级目录</td></tr><tr><td>cd ..</td><td>回退到上一级目录</td></tr><tr><td>cd 目录1\目录2...</td><td>进入多级目录</td></tr><tr><td>cd \</td><td>回退到盘符目录</td></tr><tr><td>cls</td><td>清屏</td></tr><tr><td>exit</td><td>退出命令提示符窗口</td></tr></tbody></table><h2 id="2-2-Path环境变量的配置"><a href="#2-2-Path环境变量的配置" class="headerlink" title="2.2 Path环境变量的配置"></a>2.2 Path环境变量的配置</h2><ul><li>开发Java程序，需要使用JDK提供的开发工具，而这些工具在JDK的安装目录的bin目录下</li><li>为了在开发Java程序的时候，能够方便的使用javac和java这些命令，我们需要配置Path环境变量</li></ul><h2 id="2-3-HelloWorld案例"><a href="#2-3-HelloWorld案例" class="headerlink" title="2.3 HelloWorld案例"></a>2.3 HelloWorld案例</h2><ul><li><p>开发java程序的三个步骤：编写程序、编译程序、运行程序</p></li><li><p>编译：javac 文件名.java（编译后会得到一个class文件）</p><p>eg：javac HelloWorld.java</p></li><li><p>执行：java 类名</p><p>eg：java HelloWorld</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="03-基础语法"><a href="#03-基础语法" class="headerlink" title="03 基础语法"></a>03 基础语法</h1><h2 id="3-1-注释"><a href="#3-1-注释" class="headerlink" title="3.1 注释"></a>3.1 注释</h2><ul><li><p>注释：是在程序指定位置添加的说明性信息。注释不参与程序运行，仅起到说明作用</p></li><li><p>注释的分类：</p><table><thead><tr><th>注释类别</th><th>格式</th></tr></thead><tbody><tr><td>单行注释</td><td>&#x2F;&#x2F; 注释信息</td></tr><tr><td>多行注释</td><td>&#x2F;* 注释信息 *&#x2F;</td></tr><tr><td>文档注释</td><td>&#x2F;** 注释信息 *&#x2F;</td></tr></tbody></table></li></ul><h2 id="3-2-标识符"><a href="#3-2-标识符" class="headerlink" title="3.2 标识符"></a>3.2 标识符</h2><ul><li>标识符：是给类、方法、变量等起名字的符号</li><li>标识符的定义规则：<ul><li>由数字、字母、下划线_和美元符$ 组成</li><li>不能以数字开头</li><li>不能是关键字</li><li>要区分大小写</li></ul></li><li>标识符的常见命名约定：<ul><li>小骆峰命名法：方法、变量<ul><li>约定1：标识符是一个单词的时候，首字母小写。eg：name</li><li>约定2：标识符由多个单词组成的时候，第一个单词首字母小写，其他单词首字母大写。eg：firstNAME</li></ul></li><li>大骆峰命名法：类、接口<ul><li>约定1：标识符是一个单词的时候，首字母大写。eg：Student</li><li>约定2：标识符由多个单词组成的时候，每个单词的首字母大写。eg：GoodStudent</li></ul></li><li>包名：全部小写，多级包用.隔开。eg：com.jourwon</li><li>常量：如果是一个单词，所有字母大写；如果是多个单词，所有的单词大写，用下划线区分每个单词。eg：DATE,MAX_AGE</li><li>项目名：全部用小写字母，多个单词之间用横杆-分割。eg：demo，spring-boot</li></ul></li></ul><h2 id="3-3-关键字"><a href="#3-3-关键字" class="headerlink" title="3.3 关键字"></a>3.3 关键字</h2><ul><li>关键字（keywards）：被Java语言赋予了特殊含义，用作专门用途的字符串（单词），这些关键字不能用于常量、变量、和任何标识符的名称</li><li>关键字的特点：<ul><li>关键字的字母全部小写</li><li>常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观</li></ul></li><li>关键字的注意事项：<ul><li>true，false和，null看起来像关键字，但它们实际上是文字， 但也不能在程序中将它们用作标识符</li><li>保留字（reserved words）是语言已经定义过的字，考虑扩展性和未来向后兼容。eg：const和goto</li></ul></li></ul><h2 id="3-4-数据类型"><a href="#3-4-数据类型" class="headerlink" title="3.4 数据类型"></a>3.4 数据类型</h2><ul><li><p>计算机存储单元：</p><ul><li>计算机存储设备的最小信息单元是“位（bit）”，又称为比特位，常用小写字母“b”表示</li><li>计算机中最小的存储单元是“字节（byte）”，通常用大写字母“B”表示，字节是由连续的8个位组成</li><li>其他常用的存储单位关系如下：<ul><li>1B &#x3D; 8bit；</li><li>1KB &#x3D; 1024B；</li><li>1MB &#x3D; 1024KB；</li><li>1GB &#x3D; 1024MB；</li><li>1TB &#x3D; 1024GB</li></ul></li></ul></li><li><p>数据类型：Java语言是强类型语言，对于每一种数据都给出了明确的具体的数据类型，不同的数据类型也分配了不同的内存空间，所有它们表示的数据大小也是不一样的</p></li><li><p>数据类型的分类：</p><ul><li>基本数据类型：<ul><li>数值型：<ul><li>整数类（byte、short、int、long）</li><li>浮点类（float、double）</li><li>字符（char）</li></ul></li><li>非数值型：布尔（boolean）</li></ul></li><li>引用数据类型：<ul><li>类（class）</li><li>接口（interface）</li><li>数组（[ ]）</li></ul></li></ul></li><li><p>数据类型内存占用和取值范围：</p><blockquote><p>CHART：数据类型内存占用和取值范围</p></blockquote></li></ul><h2 id="3-5-类型转换"><a href="#3-5-类型转换" class="headerlink" title="3.5 类型转换"></a>3.5 类型转换</h2><ul><li><p>类型转换的分类：自动类型转换、强制类型转换</p><ul><li><p>自动类型转换（隐式转换）：在运算过程中，由于不同的数据类型会转换成同一种数据类型，所以整型、浮点型以及字符型都可以参与混合运算。自动转换的规则是从低级类型数据转换成高级类型数据</p><ul><li><p>数值型数据的转换：byte→short→int→long→float→double。</p></li><li><p>字符型转换为整型：char→int。</p></li><li><p>eg：double d &#x3D; 10;  —&gt;10.0</p></li></ul></li><li><p>强制类型转换（显式转换）：当两种数据类型不兼容，或目标类型的取值范围小于源类型时，自动转换将无法进行，这时就需要进行强制类型转换</p><ul><li>目标类型 变量名 &#x3D; (目标类型) (被转换的数据);</li><li>eg：int k &#x3D; (int)88.88;   —&gt;88</li><li>不建议使用，因为会有精度的损失</li></ul></li></ul></li></ul><h2 id="3-6-常量"><a href="#3-6-常量" class="headerlink" title="3.6 常量"></a>3.6 常量</h2><ul><li><p>常量：在程序运行过程中，其值不可以发生改变的量</p></li><li><p>常量的分类：</p><table><thead><tr><th>常量类型</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>字符串常量</td><td>用双引号引起来的内容</td><td>“abc”、”123”、”Hello”</td></tr><tr><td>整数常量</td><td>不带小数的数字</td><td>100、200、0、-250</td></tr><tr><td>浮点数常量</td><td>带小数的数字</td><td>2.5、-3.14、0.0</td></tr><tr><td>字符常量</td><td>用单引号括起来的内容</td><td>‘a’、’B’、’9’、’中’</td></tr><tr><td>布尔常量</td><td>布尔值，表示真假</td><td>只有两个值：ture、false</td></tr><tr><td>空常量</td><td>一个特殊的值，空值</td><td>值是：null</td></tr></tbody></table></li></ul><h2 id="3-7-变量"><a href="#3-7-变量" class="headerlink" title="3.7 变量"></a>3.7 变量</h2><ul><li><p>变量：在程序执行的过程中，在某个范围内其值可以发生改变的量。从本质上讲，变量其实是内存中的一小块区域</p></li><li><p>变量的定义：数据类型 变量名 &#x3D; 变量值；eg：int a &#x3D; 10;</p></li><li><p>变量的使用：包括取值和修改值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//定义变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="comment">//输出变量</span></span><br><span class="line">System.out.println(a);</span><br><span class="line"><span class="comment">//修改变量</span></span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>变量的注意事项：</p><ul><li>变量名称不能重复</li><li>变量必须先赋值再使用</li><li>整数默认是int类型，定义long类型的数据时，要在数据后面加L</li><li>浮点数默认是double类型，定义float类型的数据时，要在数据后面加F</li><li>类外面不能有变量的声明</li></ul></li></ul><h2 id="3-8-分隔符"><a href="#3-8-分隔符" class="headerlink" title="3.8 分隔符"></a>3.8 分隔符</h2><ul><li>分隔符：空格、逗号、分号以及行结束符都被称为分隔符，规定任意两个相邻标识符、数字、保留字或语句之间必须至少有一个分隔符，以便程序编译时能够识别</li><li>分隔符的分类：<ul><li>; 分号 用来终止一个语句</li><li>{} 花括号、大括号 用来包括自动初始化的数组的值，也用来定义程序块、类、方法以及局部范围</li><li>[] 方括号、中括号 用来声明数组的类型，也用来表示撤消对数组值的引用</li><li>, 逗号 在变量声明中，区分变量说明的各个变量。在for控制语句中，用来将圆括号内的语句连接起来</li><li>. 原点 用来将软件包的名字与它的子包或类分隔。也用来将引用变量与变量或方法分隔</li><li>() 圆括号 在定义和调用方法时用来容纳参数表。在控制语句或强制类型转换组成的表达式中用来表示执行或计算的优先权</li></ul></li><li>分隔符的注意事项：必须都是半角下的英文符号</li></ul><h2 id="3-9-转义字符"><a href="#3-9-转义字符" class="headerlink" title="3.9 转义字符"></a>3.9 转义字符</h2><ul><li><p>转义字符：是一种特殊的字符常量。转义字符以反斜线””开头，后跟一个或几个字符。转义字符具有特定的含义，不同于字符原有的意义，故称“转义”字符</p></li><li><p>转义字符的分类（常见）：</p><table><thead><tr><th>转义字符</th><th>说明</th><th>ASCII码</th></tr></thead><tbody><tr><td>\b</td><td>退格，将当前位置移到前一列</td><td>8</td></tr><tr><td>\f</td><td>换页，将当前位置移到下页开头</td><td>12</td></tr><tr><td>\n</td><td>换行，将当前位置移到下一行开头</td><td>10</td></tr><tr><td>\r</td><td>回车，将当前位置移到本行开头</td><td>13</td></tr><tr><td>\t</td><td>水平制表（跳到下一个TAB位置）</td><td>9</td></tr><tr><td>\v</td><td>垂直制表</td><td>11</td></tr><tr><td>\\</td><td>代表一个反斜线字符</td><td>92</td></tr><tr><td>\‘和\“</td><td>代表一个单&#x2F;双引号字符</td><td>39&#x2F;34</td></tr><tr><td>\0</td><td>空字符（NULL）</td><td>0</td></tr></tbody></table></li><li><p>转义字符的使用：</p><ul><li>在Java中，不管是String.split()，还是正则表达式，有一些特殊字符需要转义，这些字符是( [ { &#x2F; ^ - $ ¦ } ] ) ? * + .</li><li>转义方法为字符前面加上”\“，这样在split、replaceAll时就不会报错</li><li>注意，String.contains()方法不需要转义</li></ul></li></ul><h1 id="04-运算符"><a href="#04-运算符" class="headerlink" title="04 运算符"></a>04 运算符</h1><ul><li>运算符和表达式：<ul><li>运算符：对常量或者变量进行操作的符号</li><li>表达式：用运算符把常量或者变量连接起来符合java语法的式子即为表达式</li><li>eg：int a &#x3D;10;  int b &#x3D; 20;  int c &#x3D; a + b;<ul><li>+：是运算符，并且是算术运算符</li><li>a + b：是表达式，由于+是算术运算符，所以这个表达式称为算术表达式</li></ul></li></ul></li></ul><h2 id="4-1-算数运算符"><a href="#4-1-算数运算符" class="headerlink" title="4.1 算数运算符"></a>4.1 算数运算符</h2><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>加（）</td></tr><tr><td>-</td><td>减</td></tr><tr><td>*</td><td>乘</td></tr><tr><td>&#x2F;</td><td>除（&#x2F;左右两端的类型需要一致）</td></tr><tr><td>%</td><td>取余（取模）</td></tr></tbody></table><ul><li><p>算术运算符的注意事项：</p><ul><li><p>+包含字符串加运算</p></li><li><p>&#x2F; 左右两端的类型需要一致；</p></li><li><p>%最后的符号和被模数相同；</p></li></ul></li><li><p>字符的 ‘+’ 操作：是字符在计算机底层对应的数值来进行计算的</p><ul><li><p>CHART： ‘A’——65；’a’——97；’0’——48</p><p>eg：10 + ‘A’  —&gt; 10 + 65  —&gt; 75；10 + ‘0’  —&gt; 10 + 48  —&gt; 58</p></li><li><p>算术表达式中包含多个基本数据类型的值的时候，整个算术表达式的类型会自动进行提升</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> i + c;  <span class="comment">//报错，i+c会提升到int类型，char类型不兼容ch</span></span><br></pre></td></tr></table></figure></li><li><p>提升规则：</p><ul><li>整个表达式的类型自动提示到表达式中最高等级操作数同样的类型</li><li>等级顺序：byte, short, char -&gt;int-&gt;long-&gt;float-&gt;double</li></ul></li></ul></li><li><p>字符串的 ‘+’ 操作：</p><ul><li>当 ‘+’ 操作中，先出现字符串时，表示字符串连接符，而不是算术运算</li><li>在 ‘+’ 操作中，先出现数字时，先表示算术运算；但如果出现了字符串，就是字符串连接运算符</li></ul> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello&quot;</span>+<span class="string">&quot;earth&quot;</span>);  <span class="comment">//helloearth</span></span><br><span class="line">    System.out.println(<span class="string">&quot;hello&quot;</span>+<span class="number">6666</span>);  <span class="comment">//hello6666</span></span><br><span class="line">    System.out.println(<span class="number">6666</span>+ <span class="string">&quot;hello&quot;</span>);  <span class="comment">//6666hello</span></span><br><span class="line">    System.out.println(<span class="string">&quot;hello&quot;</span>+<span class="number">6</span>+<span class="number">666</span>);  <span class="comment">//hello6666</span></span><br><span class="line">    System.out.println(<span class="number">6</span>+<span class="number">666</span>+<span class="string">&quot;hello&quot;</span>);  <span class="comment">//672hello</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-2-赋值运算符"><a href="#4-2-赋值运算符" class="headerlink" title="4.2 赋值运算符"></a>4.2 赋值运算符</h2><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值</td></tr><tr><td>+&#x3D;</td><td>加后赋值</td></tr><tr><td>-&#x3D;</td><td>减后赋值</td></tr><tr><td>*&#x3D;</td><td>乘后赋值</td></tr><tr><td>&#x2F;&#x3D;</td><td>除后赋值</td></tr><tr><td>%&#x3D;</td><td>取余后赋值</td></tr></tbody></table><ul><li><p>赋值运算符的注意事项：</p><ul><li><p>&#x3D;与&#x3D;&#x3D;容易混淆</p></li><li><p>扩展的赋值运算符隐含了强制转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">short</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">a += <span class="number">20</span>;<span class="comment">//正确（隐含强制类型转换）</span></span><br><span class="line">a = a + <span class="number">20</span>;<span class="comment">//错误（被提升到int类型）</span></span><br><span class="line">a =(<span class="type">short</span>)(a + <span class="number">20</span>)<span class="comment">//正确（强制类型转换）</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="4-3-自增自减运算符"><a href="#4-3-自增自减运算符" class="headerlink" title="4.3 自增自减运算符"></a>4.3 自增自减运算符</h2><table><thead><tr><th>符号</th><th>作用</th><th></th></tr></thead><tbody><tr><td>++</td><td>自增</td><td></td></tr><tr><td>–</td><td>自减</td><td></td></tr></tbody></table><ul><li><p>++和–既可以放在变量的后面，也可以放在变量的前面</p></li><li><p>单独使用的时候，++和–无论放在前面还算后面，结果是是一样的</p></li><li><p>参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者–</p></li><li><p>参与操作的时候，如果放在变量的前边，先拿变量做++或者–-，后拿变量参与操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span><br><span class="line">    <span class="comment">//参与操作使用</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> ++i;</span><br><span class="line">    System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span><br><span class="line">    System.out.println(<span class="string">&quot;j=&quot;</span>+j);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//i=1  j=2  j=2</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4-4-关系运算符"><a href="#4-4-关系运算符" class="headerlink" title="4.4 关系运算符"></a>4.4 关系运算符</h2><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>等于</td></tr><tr><td>!&#x3D;</td><td>不等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr></tbody></table><h2 id="4-5-逻辑运算符"><a href="#4-5-逻辑运算符" class="headerlink" title="4.5 逻辑运算符"></a>4.5 逻辑运算符</h2><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>&amp;</td><td>逻辑与</td></tr><tr><td>|</td><td>逻辑或</td></tr><tr><td>^</td><td>逻辑异或</td></tr><tr><td>!</td><td>逻辑非</td></tr><tr><td>&amp;&amp;</td><td>短路与</td></tr><tr><td>||</td><td>短路或</td></tr></tbody></table><ul><li><p>逻辑运算符的注意事项：</p><ul><li>逻辑与&amp;，无论左边真假，右边都要执行</li><li>短路与&amp;&amp;，如果左边为真，右边执行；如果左边为假，右边不执行</li><li>逻辑或|，无论左边真假，右边都要执行</li><li>短路或||，如果左边为假，右边执行；如果左边为真，右边不执行</li></ul> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注意事项：</span></span><br><span class="line"><span class="comment">1. 逻辑运算符只能是一个boolean值</span></span><br><span class="line"><span class="comment">2. 与、或需要左右各自有一个Boolean值，但是取反只需要有唯一的一个booolean即可</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">TIPS：</span></span><br><span class="line"><span class="comment">对于1 &lt; x &lt; 3的情况，应该拆成两个部分，然后使用与运算符连接起来：</span></span><br><span class="line"><span class="comment">int x = 2;</span></span><br><span class="line"><span class="comment">1 &lt; x &amp;&amp; x &lt; 3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo09Logic</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">System.out.println(<span class="number">3</span> &gt; <span class="number">4</span> &amp;&amp; ++a &lt; <span class="number">100</span>); <span class="comment">// false</span></span><br><span class="line">System.out.println(a); <span class="comment">// 10</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">System.out.println(<span class="number">3</span> &lt; <span class="number">4</span> || ++b &lt; <span class="number">100</span>); <span class="comment">// true</span></span><br><span class="line">System.out.println(b); <span class="comment">// 20</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-6-三元运算符"><a href="#4-6-三元运算符" class="headerlink" title="4.6 三元运算符"></a>4.6 三元运算符</h2><ul><li><p>格式：关系表达式？表达式1：表达式2</p></li><li><p>计算规则：首先计算关系表达式的值</p><ul><li>如果值为true，表达式1的值就是运算结果</li><li>如果值为false，表达式2的值就是运算结果</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//定义两个变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="comment">//获取两个数据中的较大值</span></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> a &gt; b ? a : b;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">System.out.println(<span class="string">&quot;max:&quot;</span> + max);# out&gt;&gt;max:<span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="05-数据输入"><a href="#05-数据输入" class="headerlink" title="05 数据输入"></a>05 数据输入</h1><ul><li><p>Scanner使用的基本步骤：</p><ul><li><p>导包：import java.util.Scanner;</p><p> ​            导包的动作必须出现在类定义的上边</p><ul><li>手动导包</li><li>快捷键导报：Alt+Enter</li><li>自动导报：输入Scan+Enter</li></ul></li><li><p>创建对象：Scanner sc &#x3D; new Scanner(System.in); </p><p> ​            这里面只有sc是变量名，可以改变，其他的都不能变</p></li><li><p>接收数据：int i &#x3D; sc.nextInt();             </p><p> ​            上面这个格式，只有i是变量名，可以变，其他都不能变</p></li></ul></li><li><p>示例：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导包：</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//创建对象：</span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="comment">//接收数据：</span></span><br><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">//输出数据：</span></span><br><span class="line">System.out.println(<span class="string">&quot;x:&quot;</span> + x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="06-分支语句"><a href="#06-分支语句" class="headerlink" title="06 分支语句"></a>06 分支语句</h1><h2 id="6-1-流程控制"><a href="#6-1-流程控制" class="headerlink" title="6.1 流程控制"></a>6.1 流程控制</h2><ul><li>流程控制语句分类：<ul><li>顺序结构</li><li>分支结构（if, switch）</li><li>循环结构(for, while, do…while)</li></ul></li><li>顺序结构：顺序结构是程序中最简单、最基本的流程控制，没用特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</li></ul><h2 id="6-2-if语句"><a href="#6-2-if语句" class="headerlink" title="6.2 if语句"></a>6.2 if语句</h2><ul><li><p>格式1：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式)&#123;</span><br><span class="line">   语句体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>格式2：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式)&#123;</span><br><span class="line">语句体<span class="number">1</span>；</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">语句体<span class="number">2</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>格式3：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (关系表达式<span class="number">1</span>)&#123;</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(关系表达式<span class="number">2</span>)&#123;</span><br><span class="line">语句体<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">···</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="6-3-switch语句"><a href="#6-3-switch语句" class="headerlink" title="6.3 switch语句"></a>6.3 switch语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>：</span><br><span class="line">语句体<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">2</span>：</span><br><span class="line">语句体<span class="number">2</span>；</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">···</span><br><span class="line"><span class="keyword">default</span>：</span><br><span class="line">语句体n+<span class="number">1</span>;</span><br><span class="line">[<span class="keyword">break</span>;]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//表达式：取值为byte, short, int, char, string.</span></span><br></pre></td></tr></table></figure><h1 id="07-循环语句"><a href="#07-循环语句" class="headerlink" title="07 循环语句"></a>07 循环语句</h1><h2 id="7-1-for循环语句"><a href="#7-1-for循环语句" class="headerlink" title="7.1 for循环语句"></a>7.1 for循环语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句;条件判断语句;条件控制语句)&#123;</span><br><span class="line">循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-2-while循环语句"><a href="#7-2-while循环语句" class="headerlink" title="7.2 while循环语句"></a>7.2 while循环语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span> (条件判断语句)&#123;</span><br><span class="line">循环体语句;</span><br><span class="line">条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-3-do…while循环语句"><a href="#7-3-do…while循环语句" class="headerlink" title="7.3 do…while循环语句"></a>7.3 do…while循环语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">循环体语句;</span><br><span class="line">条件控制语句;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure><ul><li><p>三种循环的区别：</p><ul><li>for循环和while循环先判断条件是否成立，然后决定是否执行循环体（先判断后执行）</li><li>do…while循环先执行一次循环体，然后判断条件是否成立，是否继续执行循环体（先执行后判断）</li></ul></li><li><p>for和while的区别：</p><ul><li>条件控制语句所控制的自增变量，因为归属for循环的语法结构中，在for循环结束后，就不能再次被访问了</li><li>条件控制语句所控制的自增变量，对于while循环来说不归属其语法结构中，在while循环结束后，该变量还可以继续使用</li></ul></li><li><p>死循环格式：while的死循环结构是最常见的，命令提示符窗口中Crtl+C可以结束死循环</p><ul><li>for(   ;    ;   ){   }</li><li>while(true){   }</li><li>do{   }while(true);</li></ul></li></ul><h2 id="7-4-跳转控制语句"><a href="#7-4-跳转控制语句" class="headerlink" title="7.4 跳转控制语句"></a>7.4 跳转控制语句</h2><ul><li>break：用在循环中，基于条件控制，跳过某次循环体内容的执行，继续下一次的执行</li><li>continue：用在循环中，基于条件控制，终止循环内容的执行，也就是说结束当前的整个循环</li></ul><h2 id="7-5-Random"><a href="#7-5-Random" class="headerlink" title="7.5 Random"></a>7.5 Random</h2><ul><li><p>作用： 产生一个随机数</p></li><li><p>使用步骤：</p><ul><li><p>导包：import java.util.Random;</p><pre><code>          导包的动作必须出现在类的定义的上面</code></pre></li><li><p>创建对象：Random r &#x3D; new Random();</p><p> ​            r是变量名，可以变，其他的都不允许变</p></li><li><p>获取随机数：int number &#x3D; r.nextInt(10); &#x2F;&#x2F;获取数据的范围：[0,10]，包括0，不包括10</p><p> ​            number是变量名，可以变，数字10可以变，其他的都不允许变</p></li></ul></li><li><p>示例：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导包：</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RandomDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//创建对象：</span></span><br><span class="line"><span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//用循环获取10个随机数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line"><span class="comment">//获取随机数：</span></span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;number:&quot;</span> + number);</span><br><span class="line"></span><br><span class="line"><span class="comment">//需求：获取一个1-100之间的随机数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> r.nextInt(<span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">System.out.println(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="08-IEDA"><a href="#08-IEDA" class="headerlink" title="08 IEDA"></a>08 IEDA</h1><h2 id="8-1-IDEA概述"><a href="#8-1-IDEA概述" class="headerlink" title="8.1 IDEA概述"></a>8.1 IDEA概述</h2><ul><li>IDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，是业界公认的目前用于Java程序开发最好的工具</li><li>集成环境：把代码编写、编译、执行、调试等多种功能综合到一起的开发工具</li></ul><h2 id="8-2-IDEA中的HelloWorld"><a href="#8-2-IDEA中的HelloWorld" class="headerlink" title="8.2 IDEA中的HelloWorld"></a>8.2 IDEA中的HelloWorld</h2><ul><li>创建一个空项目（JavaSE_Code）</li><li>创建一个新模块（idea_test）</li><li>在idea_test模块下的src下创建一个包（com.itheima）</li><li>在com.itheima包下新建一个类（Helloworld）</li><li>在Helloworld类中编写代码</li><li>在idea中执行程序</li></ul><h2 id="8-3-IDEA中项目结构"><a href="#8-3-IDEA中项目结构" class="headerlink" title="8.3 IDEA中项目结构"></a>8.3 IDEA中项目结构</h2><ul><li><p>Project–&gt;模块–&gt;包–&gt;类</p><blockquote><p>CHART：IDEA中项目结构</p></blockquote></li></ul><h2 id="8-4-IDEA中内容辅助键和快捷键"><a href="#8-4-IDEA中内容辅助键和快捷键" class="headerlink" title="8.4 IDEA中内容辅助键和快捷键"></a>8.4 IDEA中内容辅助键和快捷键</h2><ul><li><p>快速生成语句：</p><ul><li><p>快速生成main()方法：psvm，回车</p></li><li><p>快速生成输出语句：sout，回车</p><p> （Ctrl+Alt解决无法使用的情况）</p></li></ul></li><li><p>内容辅助键：</p><ul><li>ctrl+alt+space，内容提示，代码补全等</li></ul></li><li><p>快捷键：</p><ul><li>注释：<ol><li>单行：选中代码，ctrl+&#x2F;</li><li>多行：选址代码，ctrl+shift+&#x2F;</li></ol></li><li>格式化：ctrl+alt+L</li></ul></li></ul><h2 id="8-5-IDEA中模块操作"><a href="#8-5-IDEA中模块操作" class="headerlink" title="8.5 IDEA中模块操作"></a>8.5 IDEA中模块操作</h2><ul><li>IDEA中模块操作分类：新建模块、删除模块、导入模块</li></ul><h1 id="09-数组"><a href="#09-数组" class="headerlink" title="09 数组"></a>09 数组</h1><h2 id="9-1-数组定义格式"><a href="#9-1-数组定义格式" class="headerlink" title="9.1 数组定义格式"></a>9.1 数组定义格式</h2><ul><li><p>数组（array）：是一种用于存储多个相同类型数据的存储模型</p></li><li><p>数组的定义格式：</p><ul><li><p>格式1：数据类型[ ] 变量名</p><p>例如：int[ ] arr。定义了一个int类型的数组，数组名是arr（推荐）</p></li><li><p>格式2：数据类型 变量名[ ]，</p><p>例如：int arr[ ]。定义了一个int类型的变量，变量名是arr数组</p></li></ul></li></ul><h2 id="9-2-数组动态初始化"><a href="#9-2-数组动态初始化" class="headerlink" title="9.2 数组动态初始化"></a>9.2 数组动态初始化</h2><ul><li><p>数组初始化概述：就说为数组中的数组元素分配内存空间，并为每个数组元素赋值</p></li><li><p>数组初始化类型：动态初始化、静态初始化</p><ul><li><p>动态初始化：初始化时只指定数组长度，由系统为数组分配初始值</p><p> 格式：数据类型[ ] 变量名 &#x3D; new 数据类型[数组长度]</p><p> 例如：int [] arr &#x3D; new int[3]</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">左边：</span></span><br><span class="line"><span class="comment">int：说明数组中的元素是int类型</span></span><br><span class="line"><span class="comment">[]：说明这是一个数组</span></span><br><span class="line"><span class="comment">arr：这是数组的名称</span></span><br><span class="line"><span class="comment">右边：</span></span><br><span class="line"><span class="comment">new：为数组申请内存空间</span></span><br><span class="line"><span class="comment">int：说明数组中的元素类型是int类型</span></span><br><span class="line"><span class="comment">[]：说明这是一个数组</span></span><br><span class="line"><span class="comment">3：数组长度，其实就说数组中的元素个数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>静态初始化：9.5部分</p></li></ul></li></ul><h2 id="9-3-数组元素访问"><a href="#9-3-数组元素访问" class="headerlink" title="9.3 数组元素访问"></a>9.3 数组元素访问</h2><ul><li><p>数组变量访问方式：数组名</p><p> 数组内部保存数据的访问方式：数组名[索引]</p></li><li><p>索引：索引是数组中数据的编号方式，用于访问数组中的数据使用，数组名[索引]等同于变量名，是一种特殊的变量名</p></li><li><p>注意：</p><ul><li>索引是从0开始的</li><li>索引是连续的</li><li>索引逐一增加，每次加1</li></ul> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayDemo</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出数组名</span></span><br><span class="line">System.out.println(arr);# out&gt;&gt; [i@880ec60 表示内存地址值</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出数组中的元素</span></span><br><span class="line">System.out.println(arr[<span class="number">0</span>]);# out&gt;&gt; <span class="number">0</span></span><br><span class="line">System.out.println(arr[<span class="number">1</span>]);# out&gt;&gt; <span class="number">0</span></span><br><span class="line">System.out.println(arr[<span class="number">2</span>]);# out&gt;&gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="9-4-Java中内存分配"><a href="#9-4-Java中内存分配" class="headerlink" title="9.4 Java中内存分配"></a>9.4 Java中内存分配</h2><ul><li><p>栈内存：存储局部变量</p><p>定义在方法中的变量，例如：arr</p><p>使用完毕，立即消失</p></li><li><p>堆内存：存储new出来的内容（实体，对象）</p><p>数组在初始化时，会为存储空间添加默认值</p><ul><li>整数：0</li><li>浮点数：0.0</li><li>布尔：false</li><li>字符：空字符</li><li>引用数据类型：null</li></ul><p>每一个new出来的东西都会有一个地址值。使用完毕，会在垃圾回收器空闲时被收回</p></li></ul><blockquote><p>CHATR：Java中内存分配</p></blockquote><h2 id="9-5-数组静态初始化"><a href="#9-5-数组静态初始化" class="headerlink" title="9.5 数组静态初始化"></a>9.5 数组静态初始化</h2><ul><li><p>静态初始化：初始化时指定每个数组元素的初始值，由系统决定数组长度</p><ul><li><p>格式1：数据类型 [ ] 变量名 &#x3D; new 数据类型[ ] {数据1， 数据2， 数据3， …}，</p><p> 例如：int [ ] arr &#x3D; new int[ ] {1, 2, 3};</p></li><li><p>格式2：数据类型 [ ] 变量名 &#x3D; {数据1， 数据2， 数据3， …}，</p><p> 例如：int [ ] arr &#x3D; {1, 2, 3};</p></li></ul></li></ul><h2 id="9-6-数组操作的两个常见小问题"><a href="#9-6-数组操作的两个常见小问题" class="headerlink" title="9.6 数组操作的两个常见小问题"></a>9.6 数组操作的两个常见小问题</h2><ul><li><p>索引越界：访问了数组中不存在的索引对应的元素，造成索引越界问题</p></li><li><p>空指针异常：访问是数组已经不再指向堆内存的数据，造成空指针异常</p><p> 例如：arr &#x3D; null; arr为指针，null是空值，引用数据类型的默认值，表示不指向任何有效对象</p></li></ul><h2 id="9-7-数组常见操作"><a href="#9-7-数组常见操作" class="headerlink" title="9.7 数组常见操作"></a>9.7 数组常见操作</h2><ul><li><p>遍历：for循环 + 数组名.length</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayTest01</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//定义数组</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span> , <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用通用的遍历格式</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++)&#123;</span><br><span class="line">System.out.println(arr[x]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>获取元素个数：数组名.length，例：arr.length</p></li><li><p>获取最值：</p><ul><li>定义一个变量，用于保存最大值（或最大值）</li><li>取数组中第一个元素作为变量的初始值</li><li>与数组中剩余的数据逐个比较</li></ul> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String []args )</span> &#123;</span><br><span class="line"><span class="comment">//获取最值</span></span><br><span class="line"><span class="comment">//定义一个数组</span></span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="comment">//定义存放最大值,令他等于数组第一个元素</span></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> arr [<span class="number">0</span>];</span><br><span class="line"><span class="comment">//循环比较找出真正的最大值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt; arr.length;i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(max &lt;= arr[i]) &#123;</span><br><span class="line">max = arr[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(max);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="10-方法"><a href="#10-方法" class="headerlink" title="10 方法"></a>10 方法</h1><h2 id="10-1-方法概述"><a href="#10-1-方法概述" class="headerlink" title="10.1 方法概述"></a>10.1 方法概述</h2><ul><li>概念：方法（Method）是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集</li><li>注意：<ul><li>方法必须先创建才可以使用，该过程称为方法定义</li><li>方法创建后并不是直接运行的，需要手动使用后才执行，该过程称为方法调用</li></ul></li></ul><h2 id="10-2-方法的定义和调用"><a href="#10-2-方法的定义和调用" class="headerlink" title="10.2 方法的定义和调用"></a>10.2 方法的定义和调用</h2><ul><li><p>方法定义与调用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">method_name</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//方法体</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//方法调用</span></span><br><span class="line">method_name()</span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethodDemo</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">isEvenNumber();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//需求：定义一个方法，在方法中定义一个变量，判断该数据是否是偶数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">isEvenNumber</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">number = <span class="number">9</span>;</span><br><span class="line"><span class="comment">//判断该数是否是偶数</span></span><br><span class="line"><span class="keyword">if</span>(number%<span class="number">2</span> ==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="literal">true</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Systm.println(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="10-3-带参数方法的定义和调用"><a href="#10-3-带参数方法的定义和调用" class="headerlink" title="10.3 带参数方法的定义和调用"></a>10.3 带参数方法的定义和调用</h2><ul><li><p>带参数方法定义：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式<span class="number">1</span>：<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名(参数)&#123;...&#125;</span><br><span class="line">格式<span class="number">2</span>（单个参数）：<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名(数据类型 变量名)&#123;...&#125;</span><br><span class="line">格式<span class="number">3</span>（多个参数）：<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名(数据类型 变量名<span class="number">1</span>, 数据类型 变量名<span class="number">2</span>, ...)&#123;...&#125;</span><br></pre></td></tr></table></figure><p> 注意：</p><ul><li>方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错；</li><li>方法定义时，多个参数之间使用逗号分隔</li></ul></li><li><p>带参数方法调用：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式<span class="number">1</span>：方法名(参数);</span><br><span class="line">格式<span class="number">2</span>（单个参数）：方法名(变量名/常量值);</span><br><span class="line">格式<span class="number">3</span>（多个参数）：方法名(变量名<span class="number">1</span>/常量值<span class="number">1</span>， 变量名<span class="number">2</span>/常量值<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p> 注意：方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错</p></li><li><p>形参和实参：</p><ul><li>形参：方法定义中的参数，等同于变量定义格式。例：int number;</li><li>实参：方法调用中的参数，等同于使用变量或常量。例：10   number</li></ul></li></ul><h2 id="10-4-带返回值方法的定义和调用"><a href="#10-4-带返回值方法的定义和调用" class="headerlink" title="10.4 带返回值方法的定义和调用"></a>10.4 带返回值方法的定义和调用</h2><ul><li><p>带返回值方法定义：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：<span class="keyword">public</span> <span class="keyword">static</span> 数据类型 方法名(参数)&#123;</span><br><span class="line"><span class="keyword">return</span> 数据;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 注意：方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错</p></li><li><p>带返回值方法调用:</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">格式<span class="number">1</span>：方法名(参数);</span><br><span class="line">格式<span class="number">2</span>：数据类型 变量名=方法名(参数);</span><br></pre></td></tr></table></figure><p> 注意：方法的返回值通常会使用变量接收，否则该返回值将无意义</p></li></ul><h2 id="10-5-方法的注意事项"><a href="#10-5-方法的注意事项" class="headerlink" title="10.5 方法的注意事项"></a>10.5 方法的注意事项</h2><ul><li><p>注意事项：</p><ul><li>方法不能嵌套定义</li><li>void表示无返回值，可以省略return，也可以单独书写return，后面不加数据</li></ul></li><li><p>方法的通用格式：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 返回值类型 方法名(参数)</span><br><span class="line">&#123;</span><br><span class="line">方法体；</span><br><span class="line"><span class="keyword">return</span> 数据;</span><br><span class="line">&#125;</span><br><span class="line">其中：</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span>----修饰符，目前先记住这个格式</span><br><span class="line">返回值类型--------方法操作完毕之后返回的数据的数据类型</span><br><span class="line">方法名------------调用方法的时候使用的标识</span><br><span class="line">参数--------------由数据类型和变量名组成，多个参数之间使用逗号隔开</span><br><span class="line">方法体------------完成功能的代码块</span><br><span class="line"><span class="keyword">return</span>-----------如果方法操作完毕，有数据返回，用于把数据返回给调用者</span><br></pre></td></tr></table></figure></li><li><p>定义方法时，要做到两个明确：</p><ul><li>明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没用，写void；如果有，写对应的数据类型</li><li>明确参数：主要是明确参数的类型和数量</li></ul></li><li><p>方法调用时：</p><ul><li>void类型的方法可以直接调用</li><li>非void类型的方法，推荐用变量接收调用</li></ul></li></ul><h2 id="10-6-方法重载"><a href="#10-6-方法重载" class="headerlink" title="10.6 方法重载"></a>10.6 方法重载</h2><ul><li><p>方法重载概念：方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载：</p><ul><li>多个方法在同一个类中</li><li>多个方法具有相同的方法名</li><li>多个方法的参数不相同（类型不同或者数量不同）</li></ul></li><li><p>方法重载特点：</p><ul><li>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式；</li><li>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判断两个方法是否相互构成重载</li></ul></li><li><p>示例：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MethoDemo</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line"><span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> sum(a:<span class="number">10</span>, b:<span class="number">20</span>);</span><br><span class="line">System.out.println(result1);</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="variable">result2</span> <span class="operator">=</span> sum(a:<span class="number">10.0</span>, b:<span class="number">20.0</span>);</span><br><span class="line">System.out.println(result2);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">reslult3</span> <span class="operator">=</span> sum(a:<span class="number">10</span>, b:<span class="number">20</span>, c:<span class="number">30</span>);</span><br><span class="line">System.out.println(result3);</span><br><span class="line"></span><br><span class="line"><span class="comment">//需求1：求两个int类型数据和的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//需求2：求两个double类型数据和的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">double</span> a, <span class="type">double</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//需求3：求三个int类型数据和的方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="10-7-方法的参数的传递"><a href="#10-7-方法的参数的传递" class="headerlink" title="10.7 方法的参数的传递"></a>10.7 方法的参数的传递</h2><ul><li><p>对于基本数据类型的参数，形参的改变，不影响实际参数的值</p><blockquote><p>CHART： 基本数据类型 参数不传递</p></blockquote></li><li><p>对于引用类型的参数，形参的改变，影响实际参数的值</p><blockquote><p>CHART： 引用类型 参数传递</p></blockquote></li></ul><h1 id="11-Debug"><a href="#11-Debug" class="headerlink" title="11 Debug"></a>11 Debug</h1><ul><li>Debug概述：是供程序员使用的程序调试的工具，它用于查看程序的执行流程，也可以用于追踪程序执行过程来调试程序</li><li>Debug操作流程：Debug调试，又被称为断点调试，断点其实是一个标记，告诉我们从哪里开始查看</li><li>注意事项：如果数据来自键盘输入，一定要记住输入数据，不然就不能继续往下查看了</li></ul><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="Test-1-减肥计划"><a href="#Test-1-减肥计划" class="headerlink" title="Test_1 减肥计划"></a>Test_1 减肥计划</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//减肥计划</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//键盘录入一个星期数，用一个变量接收</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个星期数： &quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">week</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对星期数进行判断，这里用if语句实现</span></span><br><span class="line">        <span class="keyword">if</span> (week &lt; <span class="number">1</span> || week &gt; <span class="number">7</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你输入的星期数有误 &quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">4</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">5</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        switch (week) &#123;</span></span><br><span class="line"><span class="comment">            case 1:</span></span><br><span class="line"><span class="comment">                System.out.println(&quot;跑步&quot;);</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            case 2:</span></span><br><span class="line"><span class="comment">                System.out.println(&quot;游泳&quot;);</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            case 3:</span></span><br><span class="line"><span class="comment">                //...</span></span><br><span class="line"><span class="comment">            default:</span></span><br><span class="line"><span class="comment">                System.out.println(&quot;你输入的星期数有误&quot;);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-2-逢七过"><a href="#Test-2-逢七过" class="headerlink" title="Test_2 逢七过"></a>Test_2 逢七过</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例二：逢七过</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//获取数据，for循环实现</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1</span>; x &lt;= <span class="number">100</span>; x++) &#123;</span><br><span class="line">            <span class="comment">//个位是7，十位是7，能够被7整除</span></span><br><span class="line">            <span class="keyword">if</span> (x % <span class="number">10</span> == <span class="number">7</span> || (x / <span class="number">10</span> % <span class="number">10</span>) == <span class="number">7</span> || x % <span class="number">7</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//输出满足条件的数据</span></span><br><span class="line">                System.out.println(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-3-不死神兔"><a href="#Test-3-不死神兔" class="headerlink" title="Test_3 不死神兔"></a>Test_3 不死神兔</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例三：不死神兔</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1,1,2,3,5...</span></span><br><span class="line"><span class="comment">从第三个数据开始，每一个数据时前两个数据之和</span></span><br><span class="line"><span class="comment">第一个、第二个数据已知</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//定义数组，存储兔子对数</span></span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一个、第二个月已知，第三个月开始增加</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环实现计算每个月的兔子对数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">2</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            arr[x] = arr[x - <span class="number">1</span>] + arr[x - <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出最后一个元素值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;第二十个月兔子的对数是：&quot;</span> + arr[<span class="number">19</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-4-百钱百鸟"><a href="#Test-4-百钱百鸟" class="headerlink" title="Test_4 百钱百鸟"></a>Test_4 百钱百鸟</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例四：百钱白鸡</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">公鸡：五文钱</span></span><br><span class="line"><span class="comment">母鸡：三文钱</span></span><br><span class="line"><span class="comment">三个鸡雏：一文钱</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//第一层循环：表示公鸡范围</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt;= <span class="number">20</span>; x++) &#123;</span><br><span class="line">            <span class="comment">//第二层循环：表示母鸡的数量</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">0</span>; y &lt;= <span class="number">33</span>; y++) &#123;</span><br><span class="line">                <span class="comment">//直接计算鸡雏数量，无需循环</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">z</span> <span class="operator">=</span> <span class="number">100</span> - x - y;</span><br><span class="line">                <span class="keyword">if</span> (z % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; <span class="number">5</span> * x + <span class="number">3</span> * y + z / <span class="number">3</span> == <span class="number">100</span>) &#123;</span><br><span class="line">                    System.out.println(x + <span class="string">&quot;,&quot;</span> + y + <span class="string">&quot;,&quot;</span> + z);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-5-数组元素求和"><a href="#Test-5-数组元素求和" class="headerlink" title="Test_5 数组元素求和"></a>Test_5 数组元素求和</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例五：数组元素求和</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求和元素：</span></span><br><span class="line"><span class="comment">个位和十位都不能是7，并且只能是偶数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">68</span>, <span class="number">27</span>, <span class="number">95</span>, <span class="number">88</span>, <span class="number">171</span>, <span class="number">996</span>, <span class="number">51</span>, <span class="number">210</span>&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[x] % <span class="number">10</span> != <span class="number">7</span> &amp;&amp; arr[x] / <span class="number">10</span> % <span class="number">10</span> != <span class="number">7</span> &amp;&amp; arr[x] % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                sum += arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-6-数组内容相同"><a href="#Test-6-数组内容相同" class="headerlink" title="Test_6 数组内容相同"></a>Test_6 数组内容相同</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">ackage JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例六：数组内容相同</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr1 = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] arr2 = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> compare(arr1, arr2);</span><br><span class="line">        System.out.println(flag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法：用于比较两个数组内容是否相同</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    两个明确：</span></span><br><span class="line"><span class="comment">        返回值：boolean</span></span><br><span class="line"><span class="comment">        参数：int[] arr1, int[] arr2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">compare</span><span class="params">(<span class="type">int</span>[] arr1, <span class="type">int</span>[] arr2)</span> &#123;</span><br><span class="line">        <span class="comment">//先比较长度</span></span><br><span class="line">        <span class="keyword">if</span> (arr1.length != arr2.length)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; arr1.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr1[x] != arr2[x])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-7-查找"><a href="#Test-7-查找" class="headerlink" title="Test_7 查找"></a>Test_7 查找</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例七：查找</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">查找数组：</span></span><br><span class="line"><span class="comment">    返回索引值</span></span><br><span class="line"><span class="comment">    不存在返回-1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">19</span>, <span class="number">28</span>, <span class="number">37</span>, <span class="number">46</span>, <span class="number">50</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要查找的数据：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">        //定义一个索引变量，初始值为-1</span></span><br><span class="line"><span class="comment">        int index = -1;</span></span><br><span class="line"><span class="comment">        for (int x = 0; x &lt; arr.length; x++) &#123;</span></span><br><span class="line"><span class="comment">            if (arr[x] == number) &#123;</span></span><br><span class="line"><span class="comment">                index = x;</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        <span class="comment">//调用函数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> getIndex(arr,number);</span><br><span class="line">        System.out.println(<span class="string">&quot;index：&quot;</span> + index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于查找数据在数组中的索引</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    返回类型：int</span></span><br><span class="line"><span class="comment">    参数：int[] arr, number</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[x] == number) &#123;</span><br><span class="line">                index = x;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回索引</span></span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-8-反转"><a href="#Test-8-反转" class="headerlink" title="Test_8 反转"></a>Test_8 反转</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例八：反转</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">实现：首尾交换，使用临时空间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">19</span>, <span class="number">28</span>, <span class="number">37</span>, <span class="number">46</span>, <span class="number">50</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义两个索引变量循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>, end = arr.length - <span class="number">1</span>; start &lt;= end; start++, end--) &#123;</span><br><span class="line">            <span class="comment">//变量交换</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[start];</span><br><span class="line">            arr[start] = arr[end];</span><br><span class="line">            arr[end] = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法：遍历数组</span></span><br><span class="line">        printArray(arr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义方法：数组遍历模板</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;[&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(arr[x]);     <span class="comment">//最后一个元素，只输出数据</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(arr[x] + <span class="string">&quot;,&quot;</span>);     <span class="comment">//非最后一个，同时输出，</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test-9-评委打分"><a href="#Test-9-评委打分" class="headerlink" title="Test_9 评委打分"></a>Test_9 评委打分</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> JavaSE_01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例九：评委打分</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">共6个评委</span></span><br><span class="line"><span class="comment">去掉最高分、最低分，取平均值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test09</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr= <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>;x&lt;arr.length;x++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span>+(x+<span class="number">1</span>)+<span class="string">&quot;个评委的打分：&quot;</span>);</span><br><span class="line">            arr[x]=sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//printArray(arr);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法：数组最大值、数组最大值</span></span><br><span class="line">        <span class="type">int</span> max=getMax(arr);</span><br><span class="line">        <span class="type">int</span> min=getMin(arr);</span><br><span class="line">        <span class="comment">//调用方法：求数组之和</span></span><br><span class="line">        <span class="type">int</span> sum=getSum(arr);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> avg=(sum-max-min)/(arr.length-<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;选手的最终得分是：&quot;</span>+avg);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义方法：求数组最大值、最小值</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    返回值类型：int</span></span><br><span class="line"><span class="comment">    参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMax</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> max=arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x=<span class="number">1</span>;x&lt;arr.length;x++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x]&gt;max)</span><br><span class="line">                max=arr[x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getMin</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> min=arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x=<span class="number">1</span>;x&lt;arr.length;x++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x]&lt;min)</span><br><span class="line">                min=arr[x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> min;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义方法：数组求和</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    返回值类型：int</span></span><br><span class="line"><span class="comment">    参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getSum</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>;x&lt;arr.length;x++)&#123;</span><br><span class="line">            sum+=arr[x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义方法：数组遍历模板</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;[&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(arr[x]);     <span class="comment">//最后一个元素，只输出数据</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(arr[x] + <span class="string">&quot;,&quot;</span>);     <span class="comment">//非最后一个，同时输出，</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WELCOME</title>
      <link href="/2022/03/31/%EF%BC%88others%EF%BC%89/essays/WELCOME/"/>
      <url>/2022/03/31/%EF%BC%88others%EF%BC%89/essays/WELCOME/</url>
      
        <content type="html"><![CDATA[<p>Welcome to my world! </p><p>That which does not kill us makes us strong.</p>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> essays </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
